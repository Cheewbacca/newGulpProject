{"version":3,"file":"main.js","sources":["../../../thirdparty/text/text.js","SVGTags.json!text","SVGAttributes.json!text","main.js"],"names":["eval"],"mappings":"AAAAA,KAAA,yqfCCAA,KAAA,sylBCAAA,KAAA,g3jBAEAA,KCHA","sourcesContent":["eval(\"/**\\n * @license RequireJS text 2.0.10 Copyright (c) 2010-2012, The Dojo Foundation All Rights Reserved.\\n * Available via the MIT or new BSD license.\\n * see: http://github.com/requirejs/text for details\\n */\\n/*jslint regexp: true */\\n/*global require, XMLHttpRequest, ActiveXObject,\\n  define, window, process, Packages,\\n  java, location, Components, FileUtils */\\n\\ndefine(\\'text\\',[\\'module\\'], function (module) {\\n    \\'use strict\\';\\n\\n    var text, fs, Cc, Ci, xpcIsWindows,\\n        progIds = [\\'Msxml2.XMLHTTP\\', \\'Microsoft.XMLHTTP\\', \\'Msxml2.XMLHTTP.4.0\\'],\\n        xmlRegExp = /^\\\\s*<\\\\?xml(\\\\s)+version=[\\\\\\'\\\\\\\"](\\\\d)*.(\\\\d)*[\\\\\\'\\\\\\\"](\\\\s)*\\\\?>/im,\\n        bodyRegExp = /<body[^>]*>\\\\s*([\\\\s\\\\S]+)\\\\s*<\\\\/body>/im,\\n        hasLocation = typeof location !== \\'undefined\\' && location.href,\\n        defaultProtocol = hasLocation && location.protocol && location.protocol.replace(/\\\\:/, \\'\\'),\\n        defaultHostName = hasLocation && location.hostname,\\n        defaultPort = hasLocation && (location.port || undefined),\\n        buildMap = {},\\n        masterConfig = (module.config && module.config()) || {};\\n\\n    text = {\\n        version: \\'2.0.10\\',\\n\\n        strip: function (content) {\\n            //Strips <?xml ...?> declarations so that external SVG and XML\\n            //documents can be added to a document without worry. Also, if the string\\n            //is an HTML document, only the part inside the body tag is returned.\\n            if (content) {\\n                content = content.replace(xmlRegExp, \\\"\\\");\\n                var matches = content.match(bodyRegExp);\\n                if (matches) {\\n                    content = matches[1];\\n                }\\n            } else {\\n                content = \\\"\\\";\\n            }\\n            return content;\\n        },\\n\\n        jsEscape: function (content) {\\n            return content.replace(/([\\'\\\\\\\\])/g, \\'\\\\\\\\$1\\')\\n                .replace(/[\\\\f]/g, \\\"\\\\\\\\f\\\")\\n                .replace(/[\\\\b]/g, \\\"\\\\\\\\b\\\")\\n                .replace(/[\\\\n]/g, \\\"\\\\\\\\n\\\")\\n                .replace(/[\\\\t]/g, \\\"\\\\\\\\t\\\")\\n                .replace(/[\\\\r]/g, \\\"\\\\\\\\r\\\")\\n                .replace(/[\\\\u2028]/g, \\\"\\\\\\\\u2028\\\")\\n                .replace(/[\\\\u2029]/g, \\\"\\\\\\\\u2029\\\");\\n        },\\n\\n        createXhr: masterConfig.createXhr || function () {\\n            //Would love to dump the ActiveX crap in here. Need IE 6 to die first.\\n            var xhr, i, progId;\\n            if (typeof XMLHttpRequest !== \\\"undefined\\\") {\\n                return new XMLHttpRequest();\\n            } else if (typeof ActiveXObject !== \\\"undefined\\\") {\\n                for (i = 0; i < 3; i += 1) {\\n                    progId = progIds[i];\\n                    try {\\n                        xhr = new ActiveXObject(progId);\\n                    } catch (e) {}\\n\\n                    if (xhr) {\\n                        progIds = [progId];  // so faster next time\\n                        break;\\n                    }\\n                }\\n            }\\n\\n            return xhr;\\n        },\\n\\n        /**\\n         * Parses a resource name into its component parts. Resource names\\n         * look like: module/name.ext!strip, where the !strip part is\\n         * optional.\\n         * @param {String} name the resource name\\n         * @returns {Object} with properties \\\"moduleName\\\", \\\"ext\\\" and \\\"strip\\\"\\n         * where strip is a boolean.\\n         */\\n        parseName: function (name) {\\n            var modName, ext, temp,\\n                strip = false,\\n                index = name.indexOf(\\\".\\\"),\\n                isRelative = name.indexOf(\\'./\\') === 0 ||\\n                             name.indexOf(\\'../\\') === 0;\\n\\n            if (index !== -1 && (!isRelative || index > 1)) {\\n                modName = name.substring(0, index);\\n                ext = name.substring(index + 1, name.length);\\n            } else {\\n                modName = name;\\n            }\\n\\n            temp = ext || modName;\\n            index = temp.indexOf(\\\"!\\\");\\n            if (index !== -1) {\\n                //Pull off the strip arg.\\n                strip = temp.substring(index + 1) === \\\"strip\\\";\\n                temp = temp.substring(0, index);\\n                if (ext) {\\n                    ext = temp;\\n                } else {\\n                    modName = temp;\\n                }\\n            }\\n\\n            return {\\n                moduleName: modName,\\n                ext: ext,\\n                strip: strip\\n            };\\n        },\\n\\n        xdRegExp: /^((\\\\w+)\\\\:)?\\\\/\\\\/([^\\\\/\\\\\\\\]+)/,\\n\\n        /**\\n         * Is an URL on another domain. Only works for browser use, returns\\n         * false in non-browser environments. Only used to know if an\\n         * optimized .js version of a text resource should be loaded\\n         * instead.\\n         * @param {String} url\\n         * @returns Boolean\\n         */\\n        useXhr: function (url, protocol, hostname, port) {\\n            var uProtocol, uHostName, uPort,\\n                match = text.xdRegExp.exec(url);\\n            if (!match) {\\n                return true;\\n            }\\n            uProtocol = match[2];\\n            uHostName = match[3];\\n\\n            uHostName = uHostName.split(\\':\\');\\n            uPort = uHostName[1];\\n            uHostName = uHostName[0];\\n\\n            return (!uProtocol || uProtocol === protocol) &&\\n                   (!uHostName || uHostName.toLowerCase() === hostname.toLowerCase()) &&\\n                   ((!uPort && !uHostName) || uPort === port);\\n        },\\n\\n        finishLoad: function (name, strip, content, onLoad) {\\n            content = strip ? text.strip(content) : content;\\n            if (masterConfig.isBuild) {\\n                buildMap[name] = content;\\n            }\\n            onLoad(content);\\n        },\\n\\n        load: function (name, req, onLoad, config) {\\n            //Name has format: some.module.filext!strip\\n            //The strip part is optional.\\n            //if strip is present, then that means only get the string contents\\n            //inside a body tag in an HTML string. For XML/SVG content it means\\n            //removing the <?xml ...?> declarations so the content can be inserted\\n            //into the current doc without problems.\\n\\n            // Do not bother with the work if a build and text will\\n            // not be inlined.\\n            if (config.isBuild && !config.inlineText) {\\n                onLoad();\\n                return;\\n            }\\n\\n            masterConfig.isBuild = config.isBuild;\\n\\n            var parsed = text.parseName(name),\\n                nonStripName = parsed.moduleName +\\n                    (parsed.ext ? \\'.\\' + parsed.ext : \\'\\'),\\n                url = req.toUrl(nonStripName),\\n                useXhr = (masterConfig.useXhr) ||\\n                         text.useXhr;\\n\\n            // Do not load if it is an empty: url\\n            if (url.indexOf(\\'empty:\\') === 0) {\\n                onLoad();\\n                return;\\n            }\\n\\n            //Load the text. Use XHR if possible and in a browser.\\n            if (!hasLocation || useXhr(url, defaultProtocol, defaultHostName, defaultPort)) {\\n                text.get(url, function (content) {\\n                    text.finishLoad(name, parsed.strip, content, onLoad);\\n                }, function (err) {\\n                    if (onLoad.error) {\\n                        onLoad.error(err);\\n                    }\\n                });\\n            } else {\\n                //Need to fetch the resource across domains. Assume\\n                //the resource has been optimized into a JS module. Fetch\\n                //by the module name + extension, but do not include the\\n                //!strip part to avoid file system issues.\\n                req([nonStripName], function (content) {\\n                    text.finishLoad(parsed.moduleName + \\'.\\' + parsed.ext,\\n                                    parsed.strip, content, onLoad);\\n                });\\n            }\\n        },\\n\\n        write: function (pluginName, moduleName, write, config) {\\n            if (buildMap.hasOwnProperty(moduleName)) {\\n                var content = text.jsEscape(buildMap[moduleName]);\\n                write.asModule(pluginName + \\\"!\\\" + moduleName,\\n                               \\\"define(function () { return \\'\\\" +\\n                                   content +\\n                               \\\"\\';});\\\\n\\\");\\n            }\\n        },\\n\\n        writeFile: function (pluginName, moduleName, req, write, config) {\\n            var parsed = text.parseName(moduleName),\\n                extPart = parsed.ext ? \\'.\\' + parsed.ext : \\'\\',\\n                nonStripName = parsed.moduleName + extPart,\\n                //Use a \\'.js\\' file name so that it indicates it is a\\n                //script that can be loaded across domains.\\n                fileName = req.toUrl(parsed.moduleName + extPart) + \\'.js\\';\\n\\n            //Leverage own load() method to load plugin value, but only\\n            //write out values that do not have the strip argument,\\n            //to avoid any potential issues with ! in file names.\\n            text.load(nonStripName, req, function (value) {\\n                //Use own write() method to construct full module value.\\n                //But need to create shell that translates writeFile\\'s\\n                //write() to the right interface.\\n                var textWrite = function (contents) {\\n                    return write(fileName, contents);\\n                };\\n                textWrite.asModule = function (moduleName, contents) {\\n                    return write.asModule(moduleName, fileName, contents);\\n                };\\n\\n                text.write(pluginName, nonStripName, textWrite, config);\\n            }, config);\\n        }\\n    };\\n\\n    if (masterConfig.env === \\'node\\' || (!masterConfig.env &&\\n            typeof process !== \\\"undefined\\\" &&\\n            process.versions &&\\n            !!process.versions.node &&\\n            !process.versions[\\'node-webkit\\'])) {\\n        //Using special require.nodeRequire, something added by r.js.\\n        fs = require.nodeRequire(\\'fs\\');\\n\\n        text.get = function (url, callback, errback) {\\n            try {\\n                var file = fs.readFileSync(url, \\'utf8\\');\\n                //Remove BOM (Byte Mark Order) from utf8 files if it is there.\\n                if (file.indexOf(\\'\\\\uFEFF\\') === 0) {\\n                    file = file.substring(1);\\n                }\\n                callback(file);\\n            } catch (e) {\\n                errback(e);\\n            }\\n        };\\n    } else if (masterConfig.env === \\'xhr\\' || (!masterConfig.env &&\\n            text.createXhr())) {\\n        text.get = function (url, callback, errback, headers) {\\n            var xhr = text.createXhr(), header;\\n            xhr.open(\\'GET\\', url, true);\\n\\n            //Allow plugins direct access to xhr headers\\n            if (headers) {\\n                for (header in headers) {\\n                    if (headers.hasOwnProperty(header)) {\\n                        xhr.setRequestHeader(header.toLowerCase(), headers[header]);\\n                    }\\n                }\\n            }\\n\\n            //Allow overrides specified in config\\n            if (masterConfig.onXhr) {\\n                masterConfig.onXhr(xhr, url);\\n            }\\n\\n            xhr.onreadystatechange = function (evt) {\\n                var status, err;\\n                //Do not explicitly handle errors, those should be\\n                //visible via console output in the browser.\\n                if (xhr.readyState === 4) {\\n                    status = xhr.status;\\n                    if (status > 399 && status < 600) {\\n                        //An http 4xx or 5xx error. Signal an error.\\n                        err = new Error(url + \\' HTTP status: \\' + status);\\n                        err.xhr = xhr;\\n                        errback(err);\\n                    } else {\\n                        callback(xhr.responseText);\\n                    }\\n\\n                    if (masterConfig.onXhrComplete) {\\n                        masterConfig.onXhrComplete(xhr, url);\\n                    }\\n                }\\n            };\\n            xhr.send(null);\\n        };\\n    } else if (masterConfig.env === \\'rhino\\' || (!masterConfig.env &&\\n            typeof Packages !== \\'undefined\\' && typeof java !== \\'undefined\\')) {\\n        //Why Java, why is this so awkward?\\n        text.get = function (url, callback) {\\n            var stringBuffer, line,\\n                encoding = \\\"utf-8\\\",\\n                file = new java.io.File(url),\\n                lineSeparator = java.lang.System.getProperty(\\\"line.separator\\\"),\\n                input = new java.io.BufferedReader(new java.io.InputStreamReader(new java.io.FileInputStream(file), encoding)),\\n                content = \\'\\';\\n            try {\\n                stringBuffer = new java.lang.StringBuffer();\\n                line = input.readLine();\\n\\n                // Byte Order Mark (BOM) - The Unicode Standard, version 3.0, page 324\\n                // http://www.unicode.org/faq/utf_bom.html\\n\\n                // Note that when we use utf-8, the BOM should appear as \\\"EF BB BF\\\", but it doesn\\'t due to this bug in the JDK:\\n                // http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=4508058\\n                if (line && line.length() && line.charAt(0) === 0xfeff) {\\n                    // Eat the BOM, since we\\'ve already found the encoding on this file,\\n                    // and we plan to concatenating this buffer with others; the BOM should\\n                    // only appear at the top of a file.\\n                    line = line.substring(1);\\n                }\\n\\n                if (line !== null) {\\n                    stringBuffer.append(line);\\n                }\\n\\n                while ((line = input.readLine()) !== null) {\\n                    stringBuffer.append(lineSeparator);\\n                    stringBuffer.append(line);\\n                }\\n                //Make sure we return a JavaScript string and not a Java string.\\n                content = String(stringBuffer.toString()); //String\\n            } finally {\\n                input.close();\\n            }\\n            callback(content);\\n        };\\n    } else if (masterConfig.env === \\'xpconnect\\' || (!masterConfig.env &&\\n            typeof Components !== \\'undefined\\' && Components.classes &&\\n            Components.interfaces)) {\\n        //Avert your gaze!\\n        Cc = Components.classes,\\n        Ci = Components.interfaces;\\n        Components.utils[\\'import\\'](\\'resource://gre/modules/FileUtils.jsm\\');\\n        xpcIsWindows = (\\'@mozilla.org/windows-registry-key;1\\' in Cc);\\n\\n        text.get = function (url, callback) {\\n            var inStream, convertStream, fileObj,\\n                readData = {};\\n\\n            if (xpcIsWindows) {\\n                url = url.replace(/\\\\//g, \\'\\\\\\\\\\');\\n            }\\n\\n            fileObj = new FileUtils.File(url);\\n\\n            //XPCOM, you so crazy\\n            try {\\n                inStream = Cc[\\'@mozilla.org/network/file-input-stream;1\\']\\n                           .createInstance(Ci.nsIFileInputStream);\\n                inStream.init(fileObj, 1, 0, false);\\n\\n                convertStream = Cc[\\'@mozilla.org/intl/converter-input-stream;1\\']\\n                                .createInstance(Ci.nsIConverterInputStream);\\n                convertStream.init(inStream, \\\"utf-8\\\", inStream.available(),\\n                Ci.nsIConverterInputStream.DEFAULT_REPLACEMENT_CHARACTER);\\n\\n                convertStream.readString(inStream.available(), readData);\\n                convertStream.close();\\n                inStream.close();\\n                callback(readData.value);\\n            } catch (e) {\\n                throw new Error((fileObj && fileObj.path || \\'\\') + \\': \\' + e);\\n            }\\n        };\\n    }\\n    return text;\\n});\\n\\n//# sourceURL=/var/src/brackets/brackets-src/src/thirdparty/text/text.js\");\n\n","\neval(\"define(\\'text!SVGTags.json\\',[],function () { return \\'{\\\\n    \\\"attributeGroups\\\": {\\\\n        \\\"animationAddition\\\":        [\\\"accumulate\\\", \\\"additive\\\"],\\\\n        \\\"animationAttributeTarget\\\": [\\\"attributeName\\\", \\\"attributeType\\\"],\\\\n        \\\"animationEvent\\\":           [\\\"onbegin\\\", \\\"onend\\\", \\\"onload\\\", \\\"onrepeat\\\"],\\\\n        \\\"animationTiming\\\":          [\\\"begin\\\", \\\"dur\\\", \\\"end\\\", \\\"fill\\\", \\\"max\\\", \\\"min\\\", \\\"repeatCount\\\", \\\"repeatDur\\\", \\\"restart\\\"],\\\\n        \\\"animationValue\\\":           [\\\"by\\\", \\\"calcMode\\\", \\\"from\\\", \\\"keySplines\\\", \\\"keyTimes\\\", \\\"to\\\", \\\"values\\\"],\\\\n        \\\"conditionalProcessing\\\":    [\\\"requiredExtensions\\\", \\\"requiredFeatures\\\", \\\"systemLanguage\\\"],\\\\n        \\\"core\\\":                     [\\\"id\\\", \\\"xml:base\\\", \\\"xml:lang\\\", \\\"xml:space\\\"],\\\\n        \\\"documentEvent\\\":            [\\\"onabort\\\", \\\"onerror\\\", \\\"onresize\\\", \\\"onscroll\\\", \\\"onunload\\\", \\\"onzoom\\\"],\\\\n        \\\"filterPrimitive\\\":          [\\\"height\\\", \\\"result\\\", \\\"width\\\", \\\"x\\\", \\\"y\\\"],\\\\n        \\\"graphicalEvent\\\":           [\\\"onactivate\\\", \\\"onclick\\\", \\\"onfocusin\\\", \\\"onfocusout\\\", \\\"onload\\\", \\\"onmousedown\\\", \\\"onmousemove\\\", \\\"onmouseout\\\", \\\"onmouseover\\\", \\\"onmouseup\\\"],\\\\n        \\\"presentation\\\":             [\\\"alignment-baseline\\\", \\\"baseline-shift\\\", \\\"clip\\\", \\\"clip-path\\\", \\\"clip-rule\\\", \\\"color\\\", \\\"color-interpolation\\\", \\\"color-interpolation-filters\\\", \\\"color-profile\\\", \\\"color-rendering\\\", \\\"cursor\\\", \\\"direction\\\", \\\"display\\\", \\\"dominant-baseline\\\", \\\"enable-background\\\", \\\"fill\\\", \\\"fill-opacity\\\", \\\"fill-rule\\\", \\\"filter\\\", \\\"flood-color\\\", \\\"flood-opacity\\\", \\\"font-family\\\", \\\"font-size\\\", \\\"font-size-adjust\\\", \\\"font-stretch\\\", \\\"font-style\\\", \\\"font-variant\\\", \\\"font-weight\\\", \\\"glyph-orientation-horizontal\\\", \\\"glyph-orientation-vertical\\\", \\\"image-rendering\\\", \\\"kerning\\\", \\\"letter-spacing\\\", \\\"lighting-color\\\", \\\"marker-end\\\", \\\"marker-mid\\\", \\\"marker-start\\\", \\\"mask\\\", \\\"opacity\\\", \\\"overflow\\\", \\\"pointer-events\\\", \\\"shape-rendering\\\", \\\"stop-color\\\", \\\"stop-opacity\\\", \\\"stroke\\\", \\\"stroke-dasharray\\\", \\\"stroke-dashoffset\\\", \\\"stroke-linecap\\\", \\\"stroke-linejoin\\\", \\\"stroke-miterlimit\\\", \\\"stroke-opacity\\\", \\\"stroke-width\\\", \\\"text-anchor\\\", \\\"text-decoration\\\", \\\"text-rendering\\\", \\\"unicode-bidi\\\", \\\"visibility\\\", \\\"word-spacing\\\", \\\"writing-mode\\\"],\\\\n        \\\"transferFunctionElement\\\":  [\\\"amplitude\\\", \\\"exponent\\\", \\\"intercept\\\", \\\"offset\\\", \\\"slope\\\", \\\"tableValues\\\", \\\"type\\\"],\\\\n        \\\"xlink\\\":                    [\\\"xlink:actuate\\\", \\\"xlink:arcrole\\\", \\\"xlink:href\\\", \\\"xlink:role\\\", \\\"xlink:show\\\", \\\"xlink:title\\\", \\\"xlink:type\\\"]\\\\n    },\\\\n    \\\"tags\\\": {\\\\n        \\\"a\\\": {\\\\n            \\\"attributes\\\": [\\\"class\\\", \\\"externalResourcesRequired\\\", \\\"style\\\", \\\"target\\\", \\\"transform\\\"],\\\\n            \\\"attributeGroups\\\": [\\\"conditionalProcessing\\\", \\\"core\\\", \\\"graphicalEvent\\\", \\\"presentation\\\", \\\"xlink\\\"]\\\\n        },\\\\n        \\\"altGlyph\\\": {\\\\n            \\\"attributes\\\": [\\\"class\\\", \\\"dx\\\", \\\"dy\\\", \\\"externalResourcesRequired\\\", \\\"format\\\", \\\"glyphRef\\\", \\\"rotate\\\", \\\"style\\\", \\\"x\\\", \\\"y\\\"],\\\\n            \\\"attributeGroups\\\": [\\\"conditionalProcessing\\\", \\\"core\\\", \\\"graphicalEvent\\\", \\\"presentation\\\", \\\"xlink\\\"]\\\\n        },\\\\n        \\\"altGlyphDef\\\": {\\\\n            \\\"attributeGroups\\\": [\\\"core\\\"]\\\\n        },\\\\n        \\\"altGlyphItem\\\": {\\\\n            \\\"attributeGroups\\\": [\\\"core\\\"]\\\\n        },\\\\n        \\\"animate\\\": {\\\\n            \\\"attributes\\\": [\\\"externalResourcesRequired\\\"],\\\\n            \\\"attributeGroups\\\": [\\\"animationAddition\\\", \\\"animationAttributeTarget\\\", \\\"animationEvent\\\", \\\"animationTiming\\\", \\\"animationValue\\\", \\\"conditionalProcessing\\\", \\\"core\\\", \\\"presentation\\\", \\\"xlink\\\"]\\\\n        },\\\\n        \\\"animateColor\\\": {\\\\n            \\\"attributes\\\": [\\\"externalResourcesRequired\\\"],\\\\n            \\\"attributeGroups\\\": [\\\"animationAddition\\\", \\\"animationAttributeTarget\\\", \\\"animationEvent\\\", \\\"animationTiming\\\", \\\"animationValue\\\", \\\"conditionalProcessing\\\", \\\"core\\\", \\\"presentation\\\", \\\"xlink\\\"]\\\\n        },\\\\n        \\\"animateMotion\\\": {\\\\n            \\\"attributes\\\": [\\\"externalResourcesRequired\\\", \\\"keyPoints\\\", \\\"origin\\\", \\\"path\\\", \\\"rotate\\\"],\\\\n            \\\"attributeGroups\\\": [\\\"animationAddition\\\", \\\"animationEvent\\\", \\\"animationTiming\\\", \\\"animationValue\\\", \\\"conditionalProcessing\\\", \\\"core\\\", \\\"xlink\\\"]\\\\n        },\\\\n        \\\"animateTransform\\\": {\\\\n            \\\"attributes\\\": [\\\"externalResourcesRequired\\\", \\\"type\\\"],\\\\n            \\\"attributeGroups\\\": [\\\"animationAddition\\\", \\\"animationAttributeTarget\\\", \\\"animationEvent\\\", \\\"animationTiming\\\", \\\"animationValue\\\", \\\"conditionalProcessing\\\", \\\"core\\\", \\\"xlink\\\"]\\\\n        },\\\\n        \\\"circle\\\": {\\\\n            \\\"attributes\\\": [\\\"class\\\", \\\"cx\\\", \\\"cy\\\", \\\"externalResourcesRequired\\\", \\\"r\\\", \\\"style\\\", \\\"transform\\\"],\\\\n            \\\"attributeGroups\\\": [\\\"conditionalProcessing\\\", \\\"core\\\", \\\"graphicalEvent\\\", \\\"presentation\\\"]\\\\n        },\\\\n        \\\"clipPath\\\": {\\\\n            \\\"attributes\\\": [\\\"class\\\", \\\"clipPathUnits\\\", \\\"externalResourcesRequired\\\", \\\"style\\\", \\\"transform\\\"],\\\\n            \\\"attributeGroups\\\": [\\\"conditionalProcessing\\\", \\\"core\\\", \\\"presentation\\\"]\\\\n        },\\\\n        \\\"color-profile\\\": {\\\\n            \\\"attributes\\\": [\\\"local\\\", \\\"name\\\", \\\"rendering-intent\\\"],\\\\n            \\\"attributeGroups\\\": [\\\"core\\\", \\\"xlink\\\"]\\\\n        },\\\\n        \\\"cursor\\\": {\\\\n            \\\"attributes\\\": [\\\"externalResourcesRequired\\\", \\\"x\\\", \\\"y\\\"],\\\\n            \\\"attributeGroups\\\": [\\\"conditionalProcessing\\\", \\\"core\\\", \\\"xlink\\\"]\\\\n        },\\\\n        \\\"defs\\\": {\\\\n            \\\"attributes\\\": [\\\"class\\\", \\\"externalResourcesRequired\\\", \\\"style\\\", \\\"transform\\\"],\\\\n            \\\"attributeGroups\\\": [\\\"conditionalProcessing\\\", \\\"core\\\", \\\"graphicalEvent\\\", \\\"presentation\\\"]\\\\n        },\\\\n        \\\"desc\\\": {\\\\n            \\\"attributes\\\": [\\\"class\\\", \\\"style\\\"],\\\\n            \\\"attributeGroups\\\": [\\\"core\\\"]\\\\n        },\\\\n        \\\"ellipse\\\": {\\\\n            \\\"attributes\\\": [\\\"class\\\", \\\"cx\\\", \\\"cy\\\", \\\"externalResourcesRequired\\\", \\\"rx\\\", \\\"ry\\\", \\\"style\\\", \\\"transform\\\"],\\\\n            \\\"attributeGroups\\\": [\\\"conditionalProcessing\\\", \\\"core\\\", \\\"graphicalEvent\\\", \\\"presentation\\\"]\\\\n        },\\\\n        \\\"feBlend\\\": {\\\\n            \\\"attributes\\\": [\\\"class\\\", \\\"in2\\\", \\\"in\\\", \\\"mode\\\", \\\"style\\\"],\\\\n            \\\"attributeGroups\\\": [\\\"core\\\", \\\"filterPrimitive\\\", \\\"presentation\\\"]\\\\n        },\\\\n        \\\"feColorMatrix\\\": {\\\\n            \\\"attibutes\\\": [\\\"class\\\", \\\"in\\\", \\\"style\\\", \\\"type\\\", \\\"values\\\"],\\\\n            \\\"attributeGroups\\\": [\\\"core\\\", \\\"filterPrimitive\\\", \\\"presentation\\\"]\\\\n        },\\\\n        \\\"feComponentTransfer\\\": {\\\\n            \\\"attributes\\\": [\\\"class\\\", \\\"in\\\", \\\"style\\\"],\\\\n            \\\"attributeGroups\\\": [\\\"core\\\", \\\"filterPrimitive\\\", \\\"presentation\\\"]\\\\n        },\\\\n        \\\"feComposite\\\": {\\\\n            \\\"attributes\\\": [\\\"class\\\", \\\"in2\\\", \\\"in\\\", \\\"k1\\\", \\\"k2\\\", \\\"k3\\\", \\\"k4\\\", \\\"operator\\\", \\\"style\\\"],\\\\n            \\\"attributeGroups\\\": [\\\"core\\\", \\\"filterPrimitive\\\", \\\"presentation\\\"]\\\\n        },\\\\n        \\\"feConvolveMatrix\\\": {\\\\n            \\\"attributes\\\": [\\\"bias\\\", \\\"class\\\", \\\"divisor\\\", \\\"edgeMode\\\", \\\"in\\\", \\\"kernelMatrix\\\", \\\"kernelUnitLength\\\", \\\"order\\\", \\\"preserveAlpha\\\", \\\"style\\\", \\\"targetX\\\", \\\"targetY\\\"],\\\\n            \\\"attributeGroups\\\": [\\\"core\\\", \\\"filterPrimitive\\\", \\\"presentation\\\"]\\\\n        },\\\\n        \\\"feDiffuseLighting\\\": {\\\\n            \\\"attributes\\\": [\\\"class\\\", \\\"diffuseConstant\\\", \\\"in\\\", \\\"kernelUnitLength\\\", \\\"style\\\", \\\"surfaceScale\\\"],\\\\n            \\\"attributeGroups\\\": [\\\"core\\\", \\\"filterPrimitive\\\", \\\"presentation\\\"]\\\\n        },\\\\n        \\\"feDisplacementMap\\\": {\\\\n            \\\"attributes\\\": [\\\"class\\\", \\\"in2\\\", \\\"in\\\", \\\"scale\\\", \\\"style\\\", \\\"xChannelSelector\\\", \\\"yChannelSelector\\\"],\\\\n            \\\"attributeGroups\\\": [\\\"core\\\", \\\"filterPrimitive\\\", \\\"presentation\\\"]\\\\n        },\\\\n        \\\"feDistantLight\\\": {\\\\n            \\\"attributes\\\": [\\\"azimuth\\\", \\\"elevation\\\"],\\\\n            \\\"attributeGroups\\\": [\\\"core\\\"]\\\\n        },\\\\n        \\\"feFlood\\\": {\\\\n            \\\"attributes\\\": [\\\"class\\\", \\\"style\\\"],\\\\n            \\\"attributeGroups\\\": [\\\"core\\\", \\\"filterPrimitive\\\", \\\"presentation\\\"]\\\\n        },\\\\n        \\\"feFuncA\\\": {\\\\n        \\\\t\\\"attributeGroups\\\": [\\\"core\\\", \\\"transferFunctionElement\\\"]\\\\n        },\\\\n        \\\"feFuncB\\\": {\\\\n        \\\\t\\\"attributeGroups\\\": [\\\"core\\\", \\\"transferFunctionElement\\\"]\\\\n        },\\\\n        \\\"feFuncG\\\": {\\\\n        \\\\t\\\"attributeGroups\\\": [\\\"core\\\", \\\"transferFunctionElement\\\"]\\\\n        },\\\\n        \\\"feFuncR\\\": {\\\\n        \\\\t\\\"attributeGroups\\\": [\\\"core\\\", \\\"transferFunctionElement\\\"]\\\\n        },\\\\n        \\\"feGaussianBlur\\\": {\\\\n            \\\"attributes\\\": [\\\"class\\\", \\\"in\\\", \\\"stdDeviation\\\", \\\"style\\\"],\\\\n            \\\"attributeGroups\\\": [\\\"core\\\", \\\"filterPrimitive\\\", \\\"presentation\\\"]\\\\n        },\\\\n        \\\"feImage\\\": {\\\\n            \\\"attributes\\\": [\\\"class\\\", \\\"externalResourcesRequired\\\", \\\"preserveAspectRatio\\\", \\\"style\\\"],\\\\n            \\\"attributeGroups\\\": [\\\"core\\\", \\\"filterPrimitive\\\", \\\"presentation\\\", \\\"xlink\\\"]\\\\n        },\\\\n        \\\"feMerge\\\": {\\\\n            \\\"attributes\\\": [\\\"class\\\", \\\"style\\\"],\\\\n            \\\"attributeGroups\\\": [\\\"core\\\", \\\"filterPrimitive\\\", \\\"presentation\\\"]\\\\n        },\\\\n        \\\"feMergeNode\\\": {\\\\n            \\\"attributes\\\": [\\\"in\\\"],\\\\n            \\\"attributeGroups\\\": [\\\"core\\\"]\\\\n        },\\\\n        \\\"feMorphology\\\": {\\\\n            \\\"attributes\\\": [\\\"class\\\", \\\"in\\\", \\\"operator\\\", \\\"radius\\\", \\\"style\\\"],\\\\n            \\\"attributeGroups\\\": [\\\"core\\\", \\\"filterPrimitive\\\", \\\"presentation\\\"]\\\\n        },\\\\n        \\\"feOffset\\\": {\\\\n            \\\"attributes\\\": [\\\"class\\\", \\\"dx\\\", \\\"dy\\\", \\\"in\\\", \\\"style\\\"],\\\\n            \\\"attributeGroups\\\": [\\\"core\\\", \\\"filterPrimitive\\\", \\\"presentation\\\"]\\\\n        },\\\\n        \\\"fePointLight\\\": {\\\\n            \\\"attributes\\\": [\\\"x\\\", \\\"y\\\", \\\"z\\\"],\\\\n            \\\"attributeGroups\\\": [\\\"core\\\"]\\\\n        },\\\\n        \\\"feSpecularLighting\\\": {\\\\n            \\\"attributes\\\": [\\\"class\\\", \\\"in\\\", \\\"kernelUnitLength\\\", \\\"specularConstant\\\", \\\"specularExponent\\\", \\\"style\\\", \\\"surfaceScale\\\"],\\\\n            \\\"attributeGroups\\\": [\\\"core\\\", \\\"filterPrimitive\\\", \\\"presentation\\\"]\\\\n        },\\\\n        \\\"feSpotLight\\\": {\\\\n            \\\"attributes\\\": [\\\"limitingConeAngle\\\", \\\"pointsAtX\\\", \\\"pointsAtY\\\", \\\"pointsAtZ\\\", \\\"specularExponent\\\", \\\"x\\\", \\\"y\\\", \\\"z\\\"],\\\\n            \\\"attributeGroups\\\": [\\\"core\\\"]\\\\n        },\\\\n        \\\"feTile\\\": {\\\\n            \\\"attributes\\\": [\\\"class\\\", \\\"in\\\", \\\"style\\\"],\\\\n            \\\"attributeGroups\\\": [\\\"core\\\", \\\"filterPrimitive\\\", \\\"presentation\\\"]\\\\n        },\\\\n        \\\"feTurbulence\\\": {\\\\n            \\\"attributes\\\": [\\\"baseFrequency\\\", \\\"class\\\", \\\"numOctaves\\\", \\\"seed\\\", \\\"stitchTiles\\\", \\\"style\\\", \\\"type\\\"],\\\\n            \\\"attributeGroups\\\": [\\\"core\\\", \\\"filterPrimitive\\\", \\\"presentation\\\"]\\\\n        },\\\\n        \\\"filter\\\": {\\\\n            \\\"attributes\\\": [\\\"class\\\", \\\"externalResourcesRequired\\\", \\\"filterRes\\\", \\\"filterUnits\\\", \\\"height\\\", \\\"primitiveUnits\\\", \\\"style\\\", \\\"width\\\", \\\"x\\\", \\\"y\\\"],\\\\n            \\\"attributeGroups\\\": [\\\"core\\\", \\\"presentation\\\", \\\"xlink\\\"]\\\\n        },\\\\n        \\\"font\\\": {\\\\n            \\\"attributes\\\": [\\\"class\\\", \\\"externalResourcesRequired\\\", \\\"horiz-adv-x\\\", \\\"horiz-origin-x\\\", \\\"horiz-origin-y\\\", \\\"style\\\", \\\"vert-adv-y\\\", \\\"vert-origin-x\\\", \\\"vert-origin-y\\\"],\\\\n            \\\"attributeGroups\\\": [\\\"core\\\", \\\"presentation\\\"]\\\\n        },\\\\n        \\\"font-face\\\": {\\\\n            \\\"attributes\\\": [\\\"accent-height\\\", \\\"alphabetic\\\", \\\"ascent\\\", \\\"bbox\\\", \\\"cap-height\\\", \\\"descent\\\", \\\"font-family\\\", \\\"font-size\\\", \\\"font-stretch\\\", \\\"font-style\\\", \\\"font-variant\\\", \\\"font-weight\\\", \\\"hanging\\\", \\\"ideographic\\\", \\\"mathematical\\\", \\\"overline-position\\\", \\\"overline-thickness\\\", \\\"panose-1\\\", \\\"slope\\\", \\\"stemh\\\", \\\"stemv\\\", \\\"strikethrough-position\\\", \\\"strikethrough-thickness\\\", \\\"underline-position\\\", \\\"underline-thickness\\\", \\\"unicode-range\\\", \\\"units-per-em\\\", \\\"v-alphabetic\\\", \\\"v-hanging\\\", \\\"v-ideographic\\\", \\\"v-mathematical\\\", \\\"widths\\\", \\\"x-height\\\"],\\\\n            \\\"attributeGroups\\\": [\\\"core\\\"]\\\\n        },\\\\n        \\\"font-face-format\\\": {\\\\n            \\\"attributes\\\": [\\\"string\\\"],\\\\n            \\\"attributeGroups\\\": [\\\"core\\\"]\\\\n        },\\\\n        \\\"font-face-name\\\": {\\\\n            \\\"attributes\\\": [\\\"name\\\"],\\\\n            \\\"attributeGroups\\\": [\\\"core\\\"]\\\\n        },\\\\n        \\\"font-face-src\\\": {\\\\n        \\\\t\\\"attributeGroups\\\": [\\\"core\\\"]\\\\n        },\\\\n        \\\"font-face-uri\\\": {\\\\n        \\\\t\\\"attributeGroups\\\": [\\\"core\\\", \\\"xlink\\\"]\\\\n        },\\\\n        \\\"foreignObject\\\": {\\\\n            \\\"attributes\\\": [\\\"class\\\", \\\"externalResourcesRequired\\\", \\\"height\\\", \\\"style\\\", \\\"transform\\\", \\\"width\\\", \\\"x\\\", \\\"y\\\"],\\\\n            \\\"attributeGroups\\\": [\\\"conditionalProcessing\\\", \\\"core\\\", \\\"graphicalEvent\\\", \\\"presentation\\\"]\\\\n        },\\\\n        \\\"g\\\": {\\\\n            \\\"attributes\\\": [\\\"class\\\", \\\"externalResourcesRequired\\\", \\\"style\\\", \\\"transform\\\"],\\\\n            \\\"attributeGroups\\\": [\\\"conditionalProcessing\\\", \\\"core\\\", \\\"graphicalEvent\\\", \\\"presentation\\\"]\\\\n        },\\\\n        \\\"glyph\\\": {\\\\n            \\\"attributes\\\": [\\\"arabic-form\\\", \\\"class\\\", \\\"d\\\", \\\"glyph-name\\\", \\\"horiz-adv-x\\\", \\\"lang\\\", \\\"orientation\\\", \\\"style\\\", \\\"unicode\\\", \\\"vert-adv-y\\\", \\\"vert-origin-x\\\", \\\"vert-origin-y\\\"],\\\\n            \\\"attributeGroups\\\": [\\\"core\\\", \\\"presentation\\\"]\\\\n        },\\\\n        \\\"glyphRef\\\": {\\\\n            \\\"attributes\\\": [\\\"class\\\", \\\"dx\\\", \\\"dy\\\", \\\"format\\\", \\\"glyphRef\\\", \\\"style\\\", \\\"x\\\", \\\"y\\\"],\\\\n            \\\"attributeGroups\\\": [\\\"core\\\", \\\"presentation\\\", \\\"xlink\\\"]\\\\n        },\\\\n        \\\"hkern\\\": {\\\\n            \\\"attributes\\\": [\\\"g1\\\", \\\"g2\\\", \\\"k\\\", \\\"u1\\\", \\\"u2\\\"],\\\\n            \\\"attributeGroups\\\": [\\\"core\\\"]\\\\n        },\\\\n        \\\"image\\\": {\\\\n            \\\"attributes\\\": [\\\"class\\\", \\\"externalResourcesRequired\\\", \\\"height\\\", \\\"preserveAspectRatio\\\", \\\"style\\\", \\\"transform\\\", \\\"width\\\", \\\"x\\\", \\\"y\\\"],\\\\n            \\\"attributeGroups\\\": [\\\"conditionalProcessing\\\", \\\"core\\\", \\\"graphicalEvent\\\", \\\"presentation\\\", \\\"xlink\\\"]\\\\n        },\\\\n        \\\"line\\\": {\\\\n            \\\"attributes\\\": [\\\"class\\\", \\\"externalResourcesRequired\\\", \\\"style\\\", \\\"transform\\\", \\\"x1\\\", \\\"x2\\\", \\\"y1\\\", \\\"y2\\\"],\\\\n            \\\"attributeGroups\\\": [\\\"conditionalProcessing\\\", \\\"core\\\", \\\"graphicalEvent\\\", \\\"presentation\\\"]\\\\n        },\\\\n        \\\"linearGradient\\\": {\\\\n            \\\"attributes\\\": [\\\"class\\\", \\\"externalResourcesRequired\\\", \\\"gradientTransform\\\", \\\"gradientUnits\\\", \\\"spreadMethod\\\", \\\"style\\\", \\\"x1\\\", \\\"x2\\\", \\\"y1\\\", \\\"y2\\\"],\\\\n            \\\"attributeGroups\\\": [\\\"core\\\", \\\"presentation\\\", \\\"xlink\\\"]\\\\n        },\\\\n        \\\"marker\\\": {\\\\n            \\\"attributes\\\": [\\\"class\\\", \\\"externalResourcesRequired\\\", \\\"markerHeight\\\", \\\"markerUnits\\\", \\\"markerWidth\\\", \\\"orient\\\", \\\"preserveAspectRatio\\\", \\\"refX\\\", \\\"refY\\\", \\\"style\\\", \\\"viewBox\\\"],\\\\n            \\\"attributeGroups\\\": [\\\"core\\\", \\\"presentation\\\"]\\\\n        },\\\\n        \\\"mask\\\": {\\\\n            \\\"attributes\\\": [\\\"class\\\", \\\"externalResourcesRequired\\\", \\\"height\\\", \\\"maskContentUnits\\\", \\\"maskUnits\\\", \\\"style\\\", \\\"width\\\", \\\"x\\\", \\\"y\\\"],\\\\n            \\\"attributeGroups\\\": [\\\"conditionalProcessing\\\", \\\"core\\\", \\\"presentation\\\"]\\\\n        },\\\\n        \\\"metadata\\\": {\\\\n        \\\\t\\\"attributeGroups\\\": [\\\"core\\\"]\\\\n        },\\\\n        \\\"missing-glyph\\\": {\\\\n            \\\"attributes\\\": [\\\"class\\\", \\\"d\\\", \\\"horiz-adv-x\\\", \\\"style\\\", \\\"vert-adv-y\\\", \\\"vert-origin-x\\\", \\\"vert-origin-y\\\"],\\\\n            \\\"attributeGroups\\\": [\\\"core\\\", \\\"presentation\\\"]\\\\n        },\\\\n        \\\"mpath\\\": {\\\\n            \\\"attributes\\\": [\\\"externalResourcesRequired\\\"],\\\\n            \\\"attributeGroups\\\": [\\\"core\\\", \\\"xlink\\\"]\\\\n        },\\\\n        \\\"path\\\": {\\\\n            \\\"attributes\\\": [\\\"class\\\", \\\"d\\\", \\\"externalResourcesRequired\\\", \\\"pathLength\\\", \\\"style\\\", \\\"transform\\\"],\\\\n            \\\"attributeGroups\\\": [\\\"conditionalProcessing\\\", \\\"core\\\", \\\"graphicalEvent\\\", \\\"presentation\\\"]\\\\n        },\\\\n        \\\"pattern\\\": {\\\\n            \\\"attributes\\\": [\\\"class\\\", \\\"externalResourcesRequired\\\", \\\"height\\\", \\\"patternContentUnits\\\", \\\"patternTransform\\\", \\\"patternUnits\\\", \\\"preserveAspectRatio\\\", \\\"style\\\", \\\"viewBox\\\", \\\"width\\\", \\\"x\\\", \\\"y\\\"],\\\\n            \\\"attributeGroups\\\": [\\\"conditionalProcessing\\\", \\\"core\\\", \\\"presentation\\\", \\\"xlink\\\"]\\\\n        },\\\\n        \\\"polygon\\\": {\\\\n            \\\"attributes\\\": [\\\"class\\\", \\\"externalResourcesRequired\\\", \\\"points\\\", \\\"style\\\", \\\"transform\\\"],\\\\n            \\\"attributeGroups\\\": [\\\"conditionalProcessing\\\", \\\"core\\\", \\\"graphicalEvent\\\", \\\"presentation\\\"]\\\\n        },\\\\n        \\\"polyline\\\": {\\\\n            \\\"attributes\\\": [\\\"class\\\", \\\"externalResourcesRequired\\\", \\\"points\\\", \\\"style\\\", \\\"transform\\\"],\\\\n            \\\"attributeGroups\\\": [\\\"conditionalProcessing\\\", \\\"core\\\", \\\"graphicalEvent\\\", \\\"presentation\\\"]\\\\n        },\\\\n        \\\"radialGradient\\\": {\\\\n            \\\"attributes\\\": [\\\"class\\\", \\\"cx\\\", \\\"cy\\\", \\\"externalResourcesRequired\\\", \\\"fx\\\", \\\"fy\\\", \\\"gradientTransform\\\", \\\"gradientUnits\\\", \\\"r\\\", \\\"spreadMethod\\\", \\\"style\\\"],\\\\n            \\\"attributeGroups\\\": [\\\"core\\\", \\\"presentation\\\", \\\"xlink\\\"]\\\\n        },\\\\n        \\\"rect\\\": {\\\\n            \\\"attributes\\\": [\\\"class\\\", \\\"externalResourcesRequired\\\", \\\"height\\\", \\\"rx\\\", \\\"ry\\\", \\\"style\\\", \\\"transform\\\", \\\"width\\\", \\\"x\\\", \\\"y\\\"],\\\\n            \\\"attributeGroups\\\": [\\\"conditionalProcessing\\\", \\\"core\\\", \\\"graphicalEvent\\\", \\\"presentation\\\"]\\\\n        },\\\\n        \\\"script\\\": {\\\\n            \\\"attributes\\\": [\\\"externalResourcesRequired\\\", \\\"type\\\"],\\\\n            \\\"attributeGroups\\\": [\\\"core\\\", \\\"xlink\\\"]\\\\n        },\\\\n        \\\"set\\\": {\\\\n            \\\"attributes\\\": [\\\"externalResourcesRequired\\\", \\\"to\\\"],\\\\n            \\\"attributeGroups\\\": [\\\"animationAttributeTarget\\\", \\\"animationEvent\\\", \\\"animationTiming\\\", \\\"conditionalProcessing\\\", \\\"core\\\", \\\"xlink\\\"]\\\\n        },\\\\n        \\\"stop\\\": {\\\\n            \\\"attributes\\\": [\\\"class\\\", \\\"offset\\\", \\\"style\\\"],\\\\n            \\\"attributeGroups\\\": [\\\"core\\\", \\\"presentation\\\"]\\\\n        },\\\\n        \\\"style\\\": {\\\\n            \\\"attributes\\\": [\\\"media\\\", \\\"title\\\", \\\"type\\\"],\\\\n            \\\"attributeGroups\\\": [\\\"core\\\"]\\\\n        },\\\\n        \\\"svg\\\": {\\\\n            \\\"attributes\\\": [\\\"baseProfile\\\", \\\"class\\\", \\\"contentScriptType\\\", \\\"contentStyleType\\\", \\\"externalResourcesRequired\\\", \\\"height\\\", \\\"preserveAspectRatio\\\", \\\"style\\\", \\\"version\\\", \\\"viewBox\\\", \\\"width\\\", \\\"x\\\", \\\"xmlns\\\", \\\"xmlns:xlink\\\", \\\"y\\\", \\\"zoomAndPan\\\"],\\\\n            \\\"attributeGroups\\\": [\\\"conditionalProcessing\\\", \\\"core\\\", \\\"documentEvent\\\", \\\"graphicalEvent\\\", \\\"presentation\\\"]\\\\n        },\\\\n        \\\"switch\\\": {\\\\n            \\\"attributes\\\": [\\\"class\\\", \\\"externalResourcesRequired\\\", \\\"style\\\", \\\"transform\\\"],\\\\n            \\\"attributeGroups\\\": [\\\"conditionalProcessing\\\", \\\"core\\\", \\\"graphicalEvent\\\", \\\"presentation\\\"]\\\\n        },\\\\n        \\\"symbol\\\": {\\\\n            \\\"attributes\\\": [\\\"class\\\", \\\"externalResourcesRequired\\\", \\\"preserveAspectRatio\\\", \\\"style\\\", \\\"viewBox\\\"],\\\\n            \\\"attributeGroups\\\": [\\\"core\\\", \\\"graphicalEvent\\\", \\\"presentation\\\"]\\\\n        },\\\\n        \\\"text\\\": {\\\\n            \\\"attributes\\\": [\\\"class\\\", \\\"dx\\\", \\\"dy\\\", \\\"externalResourcesRequired\\\", \\\"lengthAdjust\\\", \\\"rotate\\\", \\\"style\\\", \\\"textLength\\\", \\\"transform\\\", \\\"x\\\", \\\"y\\\"],\\\\n            \\\"attributeGroups\\\": [\\\"conditionalProcessing\\\", \\\"core\\\", \\\"graphicalEvent\\\", \\\"presentation\\\"]\\\\n        },\\\\n        \\\"textPath\\\": {\\\\n            \\\"attributes\\\": [\\\"class\\\", \\\"externalResourcesRequired\\\", \\\"method\\\", \\\"spacing\\\", \\\"startOffset\\\", \\\"style\\\"],\\\\n            \\\"attributeGroups\\\": [\\\"conditionalProcessing\\\", \\\"core\\\", \\\"graphicalEvent\\\", \\\"presentation\\\"]\\\\n        },\\\\n        \\\"title\\\": {\\\\n            \\\"attributes\\\": [\\\"class\\\", \\\"style\\\"],\\\\n            \\\"attributeGroups\\\": [\\\"core\\\"]\\\\n        },\\\\n        \\\"tref\\\": {\\\\n            \\\"attributes\\\": [\\\"class\\\", \\\"externalResourcesRequired\\\", \\\"style\\\"],\\\\n            \\\"attributeGroups\\\": [\\\"conditionalProcessing\\\", \\\"core\\\", \\\"graphicalEvent\\\", \\\"presentation\\\", \\\"xlink\\\"]\\\\n        },\\\\n        \\\"tspan\\\": {\\\\n            \\\"attributes\\\": [\\\"class\\\", \\\"dx\\\", \\\"dy\\\", \\\"externalResourcesRequired\\\", \\\"lengthAdjust\\\", \\\"rotate\\\", \\\"style\\\", \\\"textLength\\\", \\\"x\\\", \\\"y\\\"],\\\\n            \\\"attributeGroups\\\": [\\\"conditionalProcessing\\\", \\\"core\\\", \\\"graphicalEvent\\\", \\\"presentation\\\"]\\\\n        },\\\\n        \\\"use\\\": {\\\\n            \\\"attributes\\\": [\\\"class\\\", \\\"externalResourcesRequired\\\", \\\"height\\\", \\\"style\\\", \\\"transform\\\", \\\"width\\\", \\\"x\\\", \\\"y\\\"],\\\\n            \\\"attributeGroups\\\": [\\\"conditionalProcessing\\\", \\\"core\\\", \\\"graphicalEvent\\\", \\\"presentation\\\", \\\"xlink\\\"]\\\\n        },\\\\n        \\\"view\\\": {\\\\n            \\\"attributes\\\": [\\\"externalResourcesRequired\\\", \\\"preserveAspectRatio\\\", \\\"viewBox\\\", \\\"viewTarget\\\", \\\"zoomAndPan\\\"],\\\\n            \\\"attributeGroups\\\": [\\\"core\\\"]\\\\n        },\\\\n        \\\"vkern\\\": {\\\\n            \\\"attributes\\\": [\\\"g1\\\", \\\"g2\\\", \\\"k\\\", \\\"u1\\\", \\\"u2\\\"],\\\\n            \\\"attributeGroups\\\": [\\\"core\\\"]\\\\n        }\\\\n    }\\\\n}\\\\n\\';});\\n\\n//# sourceURL=/text!SVGTags.json\");\n\n","\neval(\"define(\\'text!SVGAttributes.json\\',[],function () { return \\'{\\\\n    \\\"accumulate\\\": {\\\\n        \\\"attribOptions\\\": [\\\"none\\\", \\\"sum\\\"]\\\\n    },\\\\n    \\\"additive\\\": {\\\\n        \\\"attribOptions\\\": [\\\"replace\\\", \\\"sum\\\"]\\\\n    },\\\\n    \\\"alignment-baseline\\\": {\\\\n        \\\"attribOptions\\\": [\\\"after-edge\\\", \\\"alphabetic\\\", \\\"auto\\\", \\\"baseline\\\", \\\"before-edge\\\", \\\"central\\\", \\\"hanging\\\", \\\"ideographic\\\", \\\"inherit\\\", \\\"mathematical\\\", \\\"middle\\\", \\\"text-after-edge\\\", \\\"text-before-edge\\\"]\\\\n    },\\\\n    \\\"animate/fill\\\": {\\\\n        \\\"attribOptions\\\": [\\\"freeze\\\", \\\"remove\\\"]\\\\n    },\\\\n    \\\"animateColor/fill\\\": {\\\\n        \\\"attribOptions\\\": [\\\"freeze\\\", \\\"remove\\\"]\\\\n    },\\\\n    \\\"animateMotion/fill\\\": {\\\\n        \\\"attribOptions\\\": [\\\"freeze\\\", \\\"remove\\\"]\\\\n    },\\\\n    \\\"animateMotion/rotate\\\": {\\\\n        \\\"attribOptions\\\": [\\\"auto\\\", \\\"auto-reverse\\\"]\\\\n    },\\\\n    \\\"animateTransform/fill\\\": {\\\\n        \\\"attribOptions\\\": [\\\"freeze\\\", \\\"remove\\\"]\\\\n    },\\\\n    \\\"animateTransform/type\\\": {\\\\n        \\\"attribOptions\\\": [\\\"rotate\\\", \\\"scale\\\", \\\"skewX\\\", \\\"skewY\\\", \\\"translate\\\"]\\\\n    },\\\\n    \\\"arabic-form\\\": {\\\\n        \\\"attribOptions\\\": [\\\"initial\\\", \\\"isolated\\\", \\\"medial\\\", \\\"terminal\\\"]\\\\n    },\\\\n    \\\"attributeType\\\": {\\\\n        \\\"attribOptions\\\": [\\\"auto\\\", \\\"CSS\\\", \\\"XML\\\"]\\\\n    },\\\\n    \\\"baseline-shift\\\": {\\\\n        \\\"attribOptions\\\": [\\\"baseline\\\", \\\"inherit\\\", \\\"sub\\\", \\\"super\\\"]\\\\n    },\\\\n    \\\"calcMode\\\": {\\\\n        \\\"attribOptions\\\": [\\\"discrete\\\", \\\"linear\\\", \\\"paced\\\", \\\"spline\\\"]\\\\n    },\\\\n    \\\"clip\\\": {\\\\n        \\\"attribOptions\\\": [\\\"auto\\\", \\\"inherit\\\"]\\\\n    },\\\\n    \\\"clip-path\\\": {\\\\n        \\\"attribOptions\\\": [\\\"auto\\\", \\\"inherit\\\"]\\\\n    },\\\\n    \\\"clip-rule\\\": {\\\\n        \\\"attribOptions\\\": [\\\"evenodd\\\", \\\"inherit\\\", \\\"nonzero\\\"]\\\\n    },\\\\n    \\\"clipPathUnits\\\": {\\\\n        \\\"attribOptions\\\": [\\\"objectBoundingBox\\\", \\\"userSpaceOnUse\\\"]\\\\n    },\\\\n    \\\"color\\\": {\\\\n        \\\"type\\\": \\\"color\\\"\\\\n    },\\\\n    \\\"color-interpolation\\\": {\\\\n        \\\"attribOptions\\\": [\\\"auto\\\", \\\"inherit\\\", \\\"linearRGB\\\", \\\"sRGB\\\"]\\\\n    },\\\\n    \\\"color-interpolation-filters\\\": {\\\\n        \\\"attribOptions\\\": [\\\"auto\\\", \\\"inherit\\\", \\\"linearRGB\\\", \\\"sRGB\\\"]\\\\n    },\\\\n    \\\"color-profile\\\": {\\\\n        \\\"attribOptions\\\": [\\\"auto\\\", \\\"inherit\\\", \\\"sRGB\\\"]\\\\n    },\\\\n    \\\"color-rendering\\\": {\\\\n        \\\"attribOptions\\\": [\\\"auto\\\", \\\"inherit\\\", \\\"optimizeQuality\\\", \\\"optimizeSpeed\\\"]\\\\n    },\\\\n    \\\"contentScriptType\\\": {\\\\n        \\\"attribOptions\\\": [\\\"application/ecmascript\\\", \\\"application/javascript\\\", \\\"application/x-ecmascript\\\", \\\"application/x-javascript\\\", \\\"text/ecmascript\\\", \\\"text/javascript\\\", \\\"text/jscript\\\", \\\"text/livescript\\\", \\\"text/tcl\\\", \\\"text/x-ecmascript\\\", \\\"text/x-javascript\\\"]\\\\n    },\\\\n    \\\"contentStyleType\\\": {\\\\n        \\\"attribOptions\\\": [\\\"text/css\\\"]\\\\n    },\\\\n    \\\"cursor\\\": {\\\\n        \\\"attribOptions\\\": [\\\"auto\\\", \\\"crosshair\\\", \\\"default\\\", \\\"e-resize\\\", \\\"help\\\", \\\"inherit\\\", \\\"move\\\", \\\"n-resize\\\", \\\"ne-resize\\\", \\\"nw-resize\\\", \\\"pointer\\\", \\\"s-resize\\\", \\\"se-resize\\\", \\\"sw-resize\\\", \\\"text\\\", \\\"w-resize\\\", \\\"wait\\\"]\\\\n    },\\\\n    \\\"direction\\\": {\\\\n        \\\"attribOptions\\\": [\\\"inherit\\\", \\\"ltr\\\", \\\"rtl\\\"]\\\\n    },\\\\n    \\\"display\\\": {\\\\n        \\\"attribOptions\\\": [\\\"block\\\", \\\"compact\\\", \\\"inherit\\\", \\\"inline\\\", \\\"inline-table\\\", \\\"list-item\\\", \\\"marker\\\", \\\"none\\\", \\\"run-in\\\", \\\"table\\\", \\\"table-caption\\\", \\\"table-cell\\\", \\\"table-column\\\", \\\"table-column-group\\\", \\\"table-footer-group\\\", \\\"table-header-group\\\", \\\"table-row\\\", \\\"table-row-group\\\"]\\\\n    },\\\\n    \\\"dominant-baseline\\\": {\\\\n        \\\"attribOptions\\\": [\\\"alphabetic\\\", \\\"auto\\\", \\\"central\\\", \\\"hanging\\\", \\\"ideographic\\\", \\\"inherit\\\", \\\"mathematical\\\", \\\"middle\\\", \\\"no-change\\\", \\\"reset-size\\\", \\\"text-after-edge\\\", \\\"text-before-edge\\\", \\\"use-script\\\"]\\\\n    },\\\\n    \\\"dur\\\": {\\\\n        \\\"attribOptions\\\": [\\\"indefinite\\\", \\\"media\\\"]\\\\n    },\\\\n    \\\"edgeMode\\\": {\\\\n        \\\"attribOptions\\\": [\\\"duplicate\\\", \\\"none\\\", \\\"wrap\\\"]\\\\n    },\\\\n    \\\"enable-background\\\": {\\\\n        \\\"attribOptions\\\": [\\\"accumulate\\\", \\\"inherit\\\", \\\"new\\\"]\\\\n    },\\\\n    \\\"externalResourcesRequired\\\": {\\\\n        \\\"attribOptions\\\": [\\\"false\\\", \\\"true\\\"]\\\\n    },\\\\n    \\\"feColorMatrix/type\\\": {\\\\n        \\\"attribOptions\\\": [\\\"hueRotate\\\", \\\"luminanceToAlpha\\\", \\\"matrix\\\", \\\"saturate\\\"]\\\\n    },\\\\n    \\\"feComposite/operator\\\": {\\\\n        \\\"attribOptions\\\": [\\\"arithmetic\\\", \\\"atop\\\", \\\"in\\\", \\\"out\\\", \\\"over\\\", \\\"xor\\\"]\\\\n    },\\\\n    \\\"feFuncA/type\\\": {\\\\n        \\\"attribOptions\\\": [\\\"discrete\\\", \\\"gamma\\\", \\\"identity\\\", \\\"linear\\\", \\\"table\\\"]\\\\n    },\\\\n    \\\"feFuncB/type\\\": {\\\\n        \\\"attribOptions\\\": [\\\"discrete\\\", \\\"gamma\\\", \\\"identity\\\", \\\"linear\\\", \\\"table\\\"]\\\\n    },\\\\n    \\\"feFuncG/type\\\": {\\\\n        \\\"attribOptions\\\": [\\\"discrete\\\", \\\"gamma\\\", \\\"identity\\\", \\\"linear\\\", \\\"table\\\"]\\\\n    },\\\\n    \\\"feFuncR/type\\\": {\\\\n        \\\"attribOptions\\\": [\\\"discrete\\\", \\\"gamma\\\", \\\"identity\\\", \\\"linear\\\", \\\"table\\\"]\\\\n    },\\\\n    \\\"feMorphology/operator\\\": {\\\\n        \\\"attribOptions\\\": [\\\"dilate\\\", \\\"erode\\\"]\\\\n    },\\\\n    \\\"feTurbulence/type\\\": {\\\\n        \\\"attribOptions\\\": [\\\"fractalNoise\\\", \\\"turbulence\\\"]\\\\n    },\\\\n    \\\"fill\\\": {\\\\n        \\\"type\\\": \\\"color\\\"\\\\n    },\\\\n    \\\"fill-opacity\\\": {\\\\n        \\\"attribOptions\\\": [\\\"inherit\\\"]\\\\n    },\\\\n    \\\"fill-rule\\\": {\\\\n        \\\"attribOptions\\\": [\\\"evenodd\\\", \\\"inherit\\\", \\\"nonzero\\\"]\\\\n    },\\\\n    \\\"filter\\\": {\\\\n        \\\"attribOptions\\\": [\\\"inherit\\\", \\\"none\\\"]\\\\n    },\\\\n    \\\"filterUnits\\\": {\\\\n        \\\"attribOptions\\\": [\\\"objectBoundingBox\\\", \\\"userSpaceOnUse\\\"]\\\\n    },\\\\n    \\\"flood-color\\\": {\\\\n        \\\"type\\\": \\\"color\\\"\\\\n    },\\\\n    \\\"flood-opacity\\\": {\\\\n        \\\"attribOptions\\\": [\\\"inherit\\\"]\\\\n    },\\\\n    \\\"font-family\\\": {\\\\n        \\\"attribOptions\\\": [\\\"inherit\\\"]\\\\n    },\\\\n    \\\"font-size\\\": {\\\\n        \\\"attribOptions\\\": [\\\"inherit\\\"]\\\\n    },\\\\n    \\\"font-size-adjust\\\": {\\\\n        \\\"attribOptions\\\": [\\\"inherit\\\", \\\"none\\\"]\\\\n    },\\\\n    \\\"font-stretch\\\": {\\\\n        \\\"attribOptions\\\": [\\\"all\\\", \\\"condensed\\\", \\\"expanded\\\", \\\"extra-condensed\\\", \\\"extra-expanded\\\", \\\"inherit\\\", \\\"narrower\\\", \\\"normal\\\", \\\"semi-condensed\\\", \\\"semi-expanded\\\", \\\"ultra-condensed\\\", \\\"ultra-expanded\\\", \\\"wider\\\"]\\\\n    },\\\\n    \\\"font-style\\\": {\\\\n        \\\"attribOptions\\\": [\\\"all\\\", \\\"inherit\\\", \\\"italic\\\", \\\"normal\\\", \\\"oblique\\\"]\\\\n    },\\\\n    \\\"font-variant\\\": {\\\\n        \\\"attribOptions\\\": [\\\"inherit\\\", \\\"normal\\\", \\\"small-caps\\\"]\\\\n    },\\\\n    \\\"font-weight\\\": {\\\\n        \\\"attribOptions\\\": [\\\"100\\\", \\\"200\\\", \\\"300\\\", \\\"400\\\", \\\"500\\\", \\\"600\\\", \\\"700\\\", \\\"800\\\", \\\"900\\\", \\\"all\\\", \\\"bold\\\", \\\"bolder\\\", \\\"inherit\\\", \\\"lighter\\\", \\\"normal\\\"]\\\\n    },\\\\n    \\\"glyph-orientation-horizontal\\\": {\\\\n        \\\"attribOptions\\\": [\\\"inherit\\\"]\\\\n    },\\\\n    \\\"glyph-orientation-vertical\\\": {\\\\n        \\\"attribOptions\\\": [\\\"auto\\\", \\\"inherit\\\"]\\\\n    },\\\\n    \\\"gradientTransform\\\": {\\\\n        \\\"attribOptions\\\": [\\\"matrix()\\\", \\\"rotate()\\\", \\\"scale()\\\", \\\"skewX()\\\", \\\"skewY()\\\", \\\"translate()\\\"],\\\\n        \\\"multiple\\\": true\\\\n    },\\\\n    \\\"gradientUnits\\\": {\\\\n        \\\"attribOptions\\\": [\\\"objectBoundingBox\\\", \\\"userSpaceOnUse\\\"]\\\\n    },\\\\n    \\\"image-rendering\\\": {\\\\n        \\\"attribOptions\\\": [\\\"auto\\\", \\\"inherit\\\", \\\"optimizeQuality\\\", \\\"optimizeSpeed\\\"]\\\\n    },\\\\n    \\\"in\\\": {\\\\n        \\\"attribOptions\\\": [\\\"BackgroundAlpha\\\", \\\"BackgroundImage\\\", \\\"FillPaint\\\", \\\"SourceAlpha\\\", \\\"SourceGraphic\\\", \\\"StrokePaint\\\"]\\\\n    },\\\\n    \\\"in2\\\": {\\\\n        \\\"attribOptions\\\": [\\\"BackgroundAlpha\\\", \\\"BackgroundImage\\\", \\\"FillPaint\\\", \\\"SourceAlpha\\\", \\\"SourceGraphic\\\", \\\"StrokePaint\\\"]\\\\n    },\\\\n    \\\"kerning\\\": {\\\\n        \\\"attribOptions\\\": [\\\"auto\\\", \\\"inherit\\\"]\\\\n    },\\\\n    \\\"lang\\\": {\\\\n        \\\"attribOptions\\\": [\\\"aa\\\", \\\"ab\\\", \\\"af\\\", \\\"am\\\", \\\"ar\\\", \\\"as\\\", \\\"ay\\\", \\\"az\\\", \\\"ba\\\", \\\"be\\\", \\\"bg\\\", \\\"bh\\\", \\\"bi\\\", \\\"bn\\\", \\\"bo\\\", \\\"br\\\", \\\"ca\\\", \\\"co\\\", \\\"cs\\\", \\\"cy\\\", \\\"da\\\", \\\"de\\\", \\\"dz\\\", \\\"el\\\", \\\"en\\\", \\\"eo\\\", \\\"es\\\", \\\"et\\\", \\\"eu\\\", \\\"fa\\\", \\\"fi\\\", \\\"fj\\\", \\\"fo\\\", \\\"fr\\\", \\\"fy\\\", \\\"ga\\\", \\\"gd\\\", \\\"gl\\\", \\\"gn\\\", \\\"gu\\\", \\\"ha\\\", \\\"hi\\\", \\\"hr\\\", \\\"hu\\\", \\\"hy\\\", \\\"ia\\\", \\\"ie\\\", \\\"ik\\\", \\\"in\\\", \\\"is\\\", \\\"it\\\", \\\"iw\\\", \\\"ja\\\", \\\"ji\\\", \\\"jw\\\", \\\"ka\\\", \\\"kk\\\", \\\"kl\\\", \\\"km\\\", \\\"kn\\\", \\\"ko\\\", \\\"ks\\\", \\\"ku\\\", \\\"ky\\\", \\\"la\\\", \\\"ln\\\", \\\"lo\\\", \\\"lt\\\", \\\"lv\\\", \\\"mg\\\", \\\"mi\\\", \\\"mk\\\", \\\"ml\\\", \\\"mn\\\", \\\"mo\\\", \\\"mr\\\", \\\"ms\\\", \\\"mt\\\", \\\"my\\\", \\\"na\\\", \\\"ne\\\", \\\"nl\\\", \\\"no\\\", \\\"oc\\\", \\\"om\\\", \\\"or\\\", \\\"pa\\\", \\\"pl\\\", \\\"ps\\\", \\\"pt\\\", \\\"qu\\\", \\\"rm\\\", \\\"rn\\\", \\\"ro\\\", \\\"ru\\\", \\\"rw\\\", \\\"sa\\\", \\\"sd\\\", \\\"sg\\\", \\\"sh\\\", \\\"si\\\", \\\"sk\\\", \\\"sl\\\", \\\"sm\\\", \\\"sn\\\", \\\"so\\\", \\\"sq\\\", \\\"sr\\\", \\\"ss\\\", \\\"st\\\", \\\"su\\\", \\\"sv\\\", \\\"sw\\\", \\\"ta\\\", \\\"te\\\", \\\"tg\\\", \\\"th\\\", \\\"ti\\\", \\\"tk\\\", \\\"tl\\\", \\\"tn\\\", \\\"to\\\", \\\"tr\\\", \\\"ts\\\", \\\"tt\\\", \\\"tw\\\", \\\"uk\\\", \\\"ur\\\", \\\"uz\\\", \\\"vi\\\", \\\"vo\\\", \\\"wo\\\", \\\"xh\\\", \\\"yo\\\", \\\"zh\\\", \\\"zu\\\"]\\\\n    },\\\\n    \\\"lengthAdjust\\\": {\\\\n        \\\"attribOptions\\\": [\\\"spacing\\\", \\\"spacingAndGlyphs\\\"]\\\\n    },\\\\n    \\\"letter-spacing\\\": {\\\\n        \\\"attribOptions\\\": [\\\"inherit\\\", \\\"normal\\\"]\\\\n    },\\\\n    \\\"lighting-color\\\": {\\\\n        \\\"type\\\": \\\"color\\\"\\\\n    },\\\\n    \\\"marker-end\\\": {\\\\n        \\\"attribOptions\\\": [\\\"inherit\\\", \\\"none\\\"]\\\\n    },\\\\n    \\\"marker-mid\\\": {\\\\n        \\\"attribOptions\\\": [\\\"inherit\\\", \\\"none\\\"]\\\\n    },\\\\n    \\\"marker-start\\\": {\\\\n        \\\"attribOptions\\\": [\\\"inherit\\\", \\\"none\\\"]\\\\n    },\\\\n    \\\"markerUnits\\\": {\\\\n        \\\"attribOptions\\\": [\\\"strokeWidth\\\", \\\"userSpaceOnUse\\\"]\\\\n    },\\\\n    \\\"mask\\\": {\\\\n        \\\"attribOptions\\\": [\\\"inherit\\\", \\\"none\\\"]\\\\n    },\\\\n    \\\"maskContentUnits\\\": {\\\\n        \\\"attribOptions\\\": [\\\"userSpaceOnUse\\\", \\\"objectBoundingBox\\\"]\\\\n    },\\\\n    \\\"maskUnits\\\": {\\\\n        \\\"attribOptions\\\": [\\\"userSpaceOnUse\\\", \\\"objectBoundingBox\\\"]\\\\n    },\\\\n    \\\"max\\\": {\\\\n        \\\"attribOptions\\\": [\\\"media\\\"]\\\\n    },\\\\n    \\\"method\\\": {\\\\n        \\\"attribOptions\\\": [\\\"align\\\", \\\"stretch\\\"]\\\\n    },\\\\n    \\\"min\\\": {\\\\n        \\\"attribOptions\\\": [\\\"media\\\"]\\\\n    },\\\\n    \\\"mode\\\": {\\\\n        \\\"attribOptions\\\": [\\\"darken\\\", \\\"lighten\\\", \\\"multiply\\\", \\\"normal\\\", \\\"screen\\\"]\\\\n    },\\\\n    \\\"opacity\\\": {\\\\n        \\\"attribOptions\\\": [\\\"inherit\\\"]\\\\n    },\\\\n    \\\"orient\\\": {\\\\n        \\\"attribOptions\\\": [\\\"auto\\\"]\\\\n    },\\\\n    \\\"orientation\\\": {\\\\n        \\\"attribOptions\\\": [\\\"h\\\", \\\"v\\\"]\\\\n    },\\\\n    \\\"origin\\\": {\\\\n        \\\"attribOptions\\\": [\\\"default\\\"]\\\\n    },\\\\n    \\\"overflow\\\": {\\\\n        \\\"attribOptions\\\": [\\\"auto\\\", \\\"hidden\\\", \\\"inherit\\\", \\\"scroll\\\", \\\"visible\\\"]\\\\n    },\\\\n    \\\"patternContentUnits\\\": {\\\\n        \\\"attribOptions\\\": [\\\"objectBoundingBox\\\", \\\"userSpaceOnUse\\\"]\\\\n    },\\\\n    \\\"patternTransform\\\": {\\\\n        \\\"attribOptions\\\": [\\\"matrix()\\\", \\\"rotate()\\\", \\\"scale()\\\", \\\"skewX()\\\", \\\"skewY()\\\", \\\"translate()\\\"],\\\\n        \\\"multiple\\\": true\\\\n    },\\\\n    \\\"patternUnits\\\": {\\\\n        \\\"attribOptions\\\": [\\\"objectBoundingBox\\\", \\\"userSpaceOnUse\\\"]\\\\n    },\\\\n    \\\"pointer-events\\\": {\\\\n        \\\"attribOptions\\\": [\\\"all\\\", \\\"fill\\\", \\\"inherit\\\", \\\"none\\\", \\\"painted\\\", \\\"stroke\\\", \\\"visible\\\", \\\"visibleFill\\\", \\\"visiblePainted\\\", \\\"visibleStroke\\\"]\\\\n    },\\\\n    \\\"preserveAlpha\\\": {\\\\n        \\\"attribOptions\\\": [\\\"false\\\", \\\"true\\\"]\\\\n    },\\\\n    \\\"preserveAspectRatio\\\": {\\\\n        \\\"attribOptions\\\": [\\\"meet\\\", \\\"none\\\", \\\"slice\\\", \\\"xMaxYMax\\\", \\\"xMaxYMid\\\", \\\"xMaxYMin\\\", \\\"xMidYMax\\\", \\\"xMidYMid\\\", \\\"xMidYMin\\\", \\\"xMinYMax\\\", \\\"xMinYMid\\\", \\\"xMinYMin\\\"],\\\\n        \\\"multiple\\\": true\\\\n    },\\\\n    \\\"primitiveUnits\\\": {\\\\n        \\\"attribOptions\\\": [\\\"objectBoundingBox\\\", \\\"userSpaceOnUse\\\"]\\\\n    },\\\\n    \\\"rendering-intent\\\": {\\\\n        \\\"attribOptions\\\": [\\\"absolute-colorimetric\\\", \\\"auto\\\", \\\"perceptual\\\", \\\"relative-colorimetric\\\", \\\"saturation\\\"]\\\\n    },\\\\n    \\\"repeatCount\\\": {\\\\n        \\\"attribOptions\\\": [\\\"indefinite\\\"]\\\\n    },\\\\n    \\\"repeatDur\\\": {\\\\n        \\\"attribOptions\\\": [\\\"indefinite\\\"]\\\\n    },\\\\n    \\\"requiredFeatures\\\": {\\\\n        \\\"attribOptions\\\": [\\\"http://www.w3.org/TR/SVG11/feature#AnimationEventsAttribute\\\", \\\"http://www.w3.org/TR/SVG11/feature#BasicClip\\\", \\\"http://www.w3.org/TR/SVG11/feature#BasicFilter\\\", \\\"http://www.w3.org/TR/SVG11/feature#BasicFont\\\", \\\"http://www.w3.org/TR/SVG11/feature#BasicGraphicsAttribute\\\", \\\"http://www.w3.org/TR/SVG11/feature#BasicPaintAttribute\\\", \\\"http://www.w3.org/TR/SVG11/feature#BasicStructure\\\", \\\"http://www.w3.org/TR/SVG11/feature#BasicText\\\", \\\"http://www.w3.org/TR/SVG11/feature#Clip\\\", \\\"http://www.w3.org/TR/SVG11/feature#ColorProfile\\\", \\\"http://www.w3.org/TR/SVG11/feature#ConditionalProcessing\\\", \\\"http://www.w3.org/TR/SVG11/feature#ContainerAttribute\\\", \\\"http://www.w3.org/TR/SVG11/feature#CoreAttribute\\\", \\\"http://www.w3.org/TR/SVG11/feature#Cursor\\\", \\\"http://www.w3.org/TR/SVG11/feature#DocumentEventsAttribute\\\", \\\"http://www.w3.org/TR/SVG11/feature#Extensibility\\\", \\\"http://www.w3.org/TR/SVG11/feature#ExternalResourcesRequired\\\", \\\"http://www.w3.org/TR/SVG11/feature#Filter\\\", \\\"http://www.w3.org/TR/SVG11/feature#Font\\\", \\\"http://www.w3.org/TR/SVG11/feature#Gradient\\\", \\\"http://www.w3.org/TR/SVG11/feature#GraphicalEventsAttribute\\\", \\\"http://www.w3.org/TR/SVG11/feature#GraphicsAttribute\\\", \\\"http://www.w3.org/TR/SVG11/feature#Hyperlinking\\\", \\\"http://www.w3.org/TR/SVG11/feature#Image\\\", \\\"http://www.w3.org/TR/SVG11/feature#Marker\\\", \\\"http://www.w3.org/TR/SVG11/feature#Mask\\\", \\\"http://www.w3.org/TR/SVG11/feature#OpacityAttribute\\\", \\\"http://www.w3.org/TR/SVG11/feature#PaintAttribute\\\", \\\"http://www.w3.org/TR/SVG11/feature#Pattern\\\", \\\"http://www.w3.org/TR/SVG11/feature#SVG-animation\\\", \\\"http://www.w3.org/TR/SVG11/feature#SVG-dynamic\\\", \\\"http://www.w3.org/TR/SVG11/feature#SVG-static\\\", \\\"http://www.w3.org/TR/SVG11/feature#SVGDOM-animation\\\", \\\"http://www.w3.org/TR/SVG11/feature#SVGDOM-dynamic\\\", \\\"http://www.w3.org/TR/SVG11/feature#SVGDOM-static\\\", \\\"http://www.w3.org/TR/SVG11/feature#Scripting\\\", \\\"http://www.w3.org/TR/SVG11/feature#Shape\\\", \\\"http://www.w3.org/TR/SVG11/feature#Structure\\\", \\\"http://www.w3.org/TR/SVG11/feature#Style\\\", \\\"http://www.w3.org/TR/SVG11/feature#Text\\\", \\\"http://www.w3.org/TR/SVG11/feature#ViewportAttribute\\\", \\\"http://www.w3.org/TR/SVG11/feature#XlinkAttribute\\\"]\\\\n    },\\\\n    \\\"restart\\\": {\\\\n        \\\"attribOptions\\\": [\\\"always\\\", \\\"never\\\", \\\"whenNotActive\\\"]\\\\n    },\\\\n    \\\"script/type\\\": {\\\\n        \\\"attribOptions\\\": [\\\"application/ecmascript\\\", \\\"application/javascript\\\", \\\"application/x-ecmascript\\\", \\\"application/x-javascript\\\", \\\"text/ecmascript\\\", \\\"text/javascript\\\", \\\"text/jscript\\\", \\\"text/livescript\\\", \\\"text/tcl\\\", \\\"text/x-ecmascript\\\", \\\"text/x-javascript\\\"]\\\\n    },\\\\n    \\\"set/fill\\\": {\\\\n        \\\"attribOptions\\\": [\\\"freeze\\\", \\\"remove\\\"]\\\\n    },\\\\n    \\\"shape-rendering\\\": {\\\\n        \\\"attribOptions\\\": [\\\"auto\\\", \\\"crispEdges\\\", \\\"geometricPrecision\\\", \\\"inherit\\\", \\\"optimizeSpeed\\\"]\\\\n    },\\\\n    \\\"spacing\\\": {\\\\n        \\\"attribOptions\\\": [\\\"auto\\\", \\\"exact\\\"]\\\\n    },\\\\n    \\\"spreadMethod\\\": {\\\\n        \\\"attribOptions\\\": [\\\"pad\\\", \\\"reflect\\\", \\\"repeat\\\"]\\\\n    },\\\\n    \\\"stitchTiles\\\": {\\\\n        \\\"attribOptions\\\": [\\\"noStitch\\\", \\\"stitch\\\"]\\\\n    },\\\\n    \\\"stop-color\\\": {\\\\n        \\\"type\\\": \\\"color\\\"\\\\n    },\\\\n    \\\"stop-opacity\\\": {\\\\n        \\\"attribOptions\\\": [\\\"inherit\\\"]\\\\n    },\\\\n    \\\"stroke\\\": {\\\\n        \\\"type\\\": \\\"color\\\"\\\\n    },\\\\n    \\\"stroke-dasharray\\\": {\\\\n        \\\"attribOptions\\\": [\\\"inherit\\\", \\\"none\\\"]\\\\n    },\\\\n    \\\"stroke-dashoffset\\\": {\\\\n        \\\"attribOptions\\\": [\\\"inherit\\\"]\\\\n    },\\\\n    \\\"stroke-linecap\\\": {\\\\n        \\\"attribOptions\\\": [\\\"butt\\\", \\\"inherit\\\", \\\"round\\\", \\\"square\\\"]\\\\n    },\\\\n    \\\"stroke-linejoin\\\": {\\\\n        \\\"attribOptions\\\": [\\\"bevel\\\", \\\"inherit\\\", \\\"miter\\\", \\\"round\\\"]\\\\n    },\\\\n    \\\"stroke-miterlimit\\\": {\\\\n        \\\"attribOptions\\\": [\\\"inherit\\\"]\\\\n    },\\\\n    \\\"stroke-opacity\\\": {\\\\n        \\\"attribOptions\\\": [\\\"inherit\\\"]\\\\n    },\\\\n    \\\"stroke-width\\\": {\\\\n        \\\"attribOptions\\\": [\\\"inherit\\\"]\\\\n    },\\\\n    \\\"style/type\\\": {\\\\n        \\\"attribOptions\\\": [\\\"text/css\\\"]\\\\n    },\\\\n    \\\"svg/xmlns\\\": {\\\\n        \\\"attribOptions\\\": [\\\"http://www.w3.org/2000/svg\\\"]\\\\n    },\\\\n    \\\"svg/xmlns:xlink\\\": {\\\\n        \\\"attribOptions\\\": [\\\"http://www.w3.org/1999/xlink\\\"]\\\\n    },\\\\n    \\\"systemLanguage\\\": {\\\\n        \\\"attribOptions\\\": [\\\"aa\\\", \\\"ab\\\", \\\"af\\\", \\\"am\\\", \\\"ar\\\", \\\"as\\\", \\\"ay\\\", \\\"az\\\", \\\"ba\\\", \\\"be\\\", \\\"bg\\\", \\\"bh\\\", \\\"bi\\\", \\\"bn\\\", \\\"bo\\\", \\\"br\\\", \\\"ca\\\", \\\"co\\\", \\\"cs\\\", \\\"cy\\\", \\\"da\\\", \\\"de\\\", \\\"dz\\\", \\\"el\\\", \\\"en\\\", \\\"eo\\\", \\\"es\\\", \\\"et\\\", \\\"eu\\\", \\\"fa\\\", \\\"fi\\\", \\\"fj\\\", \\\"fo\\\", \\\"fr\\\", \\\"fy\\\", \\\"ga\\\", \\\"gd\\\", \\\"gl\\\", \\\"gn\\\", \\\"gu\\\", \\\"ha\\\", \\\"hi\\\", \\\"hr\\\", \\\"hu\\\", \\\"hy\\\", \\\"ia\\\", \\\"ie\\\", \\\"ik\\\", \\\"in\\\", \\\"is\\\", \\\"it\\\", \\\"iw\\\", \\\"ja\\\", \\\"ji\\\", \\\"jw\\\", \\\"ka\\\", \\\"kk\\\", \\\"kl\\\", \\\"km\\\", \\\"kn\\\", \\\"ko\\\", \\\"ks\\\", \\\"ku\\\", \\\"ky\\\", \\\"la\\\", \\\"ln\\\", \\\"lo\\\", \\\"lt\\\", \\\"lv\\\", \\\"mg\\\", \\\"mi\\\", \\\"mk\\\", \\\"ml\\\", \\\"mn\\\", \\\"mo\\\", \\\"mr\\\", \\\"ms\\\", \\\"mt\\\", \\\"my\\\", \\\"na\\\", \\\"ne\\\", \\\"nl\\\", \\\"no\\\", \\\"oc\\\", \\\"om\\\", \\\"or\\\", \\\"pa\\\", \\\"pl\\\", \\\"ps\\\", \\\"pt\\\", \\\"qu\\\", \\\"rm\\\", \\\"rn\\\", \\\"ro\\\", \\\"ru\\\", \\\"rw\\\", \\\"sa\\\", \\\"sd\\\", \\\"sg\\\", \\\"sh\\\", \\\"si\\\", \\\"sk\\\", \\\"sl\\\", \\\"sm\\\", \\\"sn\\\", \\\"so\\\", \\\"sq\\\", \\\"sr\\\", \\\"ss\\\", \\\"st\\\", \\\"su\\\", \\\"sv\\\", \\\"sw\\\", \\\"ta\\\", \\\"te\\\", \\\"tg\\\", \\\"th\\\", \\\"ti\\\", \\\"tk\\\", \\\"tl\\\", \\\"tn\\\", \\\"to\\\", \\\"tr\\\", \\\"ts\\\", \\\"tt\\\", \\\"tw\\\", \\\"uk\\\", \\\"ur\\\", \\\"uz\\\", \\\"vi\\\", \\\"vo\\\", \\\"wo\\\", \\\"xh\\\", \\\"yo\\\", \\\"zh\\\", \\\"zu\\\"],\\\\n        \\\"multiple\\\": true\\\\n    },\\\\n    \\\"target\\\": {\\\\n        \\\"attribOptions\\\": [\\\"_blank\\\", \\\"_parent\\\", \\\"_replace\\\", \\\"_self\\\", \\\"_top\\\"]\\\\n    },\\\\n    \\\"text-anchor\\\": {\\\\n        \\\"attribOptions\\\": [\\\"end\\\", \\\"inherit\\\", \\\"middle\\\", \\\"start\\\"]\\\\n    },\\\\n    \\\"text-decoration\\\": {\\\\n        \\\"attribOptions\\\": [\\\"blink\\\", \\\"inherit\\\", \\\"line-through\\\", \\\"none\\\", \\\"overline\\\", \\\"underline\\\"]\\\\n    },\\\\n    \\\"text-rendering\\\": {\\\\n        \\\"attribOptions\\\": [\\\"auto\\\", \\\"geometricPrecision\\\", \\\"inherit\\\", \\\"optimizeLegibility\\\", \\\"optimizeSpeed\\\"]\\\\n    },\\\\n    \\\"transform\\\": {\\\\n        \\\"attribOptions\\\": [\\\"matrix()\\\", \\\"rotate()\\\", \\\"scale()\\\", \\\"skewX()\\\", \\\"skewY()\\\", \\\"translate()\\\"],\\\\n        \\\"multiple\\\": true\\\\n    },\\\\n    \\\"unicode-bidi\\\": {\\\\n        \\\"attribOptions\\\": [\\\"bidi-override\\\", \\\"embed\\\", \\\"inherit\\\", \\\"normal\\\"]\\\\n    },\\\\n    \\\"version\\\": {\\\\n        \\\"attribOptions\\\": [\\\"1.0\\\", \\\"1.1\\\"]\\\\n    },\\\\n    \\\"visibility\\\": {\\\\n        \\\"attribOptions\\\": [\\\"collapse\\\", \\\"hidden\\\", \\\"inherit\\\", \\\"visible\\\"]\\\\n    },\\\\n    \\\"word-spacing\\\": {\\\\n        \\\"attribOptions\\\": [\\\"inherit\\\", \\\"normal\\\"]\\\\n    },\\\\n    \\\"writing-mode\\\": {\\\\n        \\\"attribOptions\\\": [\\\"inherit\\\", \\\"lr\\\", \\\"lr-tb\\\", \\\"rl\\\", \\\"rl-tb\\\", \\\"tb\\\", \\\"tb-rl\\\"]\\\\n    },\\\\n    \\\"xChannelSelector\\\": {\\\\n        \\\"attribOptions\\\": [\\\"R\\\", \\\"G\\\", \\\"B\\\", \\\"A\\\"]\\\\n    },\\\\n    \\\"xlink:actuate\\\": {\\\\n        \\\"attribOptions\\\": [\\\"onLoad\\\", \\\"onRequest\\\"]\\\\n    },\\\\n    \\\"xlink:show\\\": {\\\\n        \\\"attribOptions\\\": [\\\"embed\\\", \\\"new\\\", \\\"none\\\", \\\"other\\\", \\\"replace\\\"]\\\\n    },\\\\n    \\\"xlink:type\\\": {\\\\n        \\\"attribOptions\\\": [\\\"simple\\\"]\\\\n    },\\\\n    \\\"xml:lang\\\": {\\\\n        \\\"attribOptions\\\": [\\\"aa\\\", \\\"ab\\\", \\\"af\\\", \\\"am\\\", \\\"ar\\\", \\\"as\\\", \\\"ay\\\", \\\"az\\\", \\\"ba\\\", \\\"be\\\", \\\"bg\\\", \\\"bh\\\", \\\"bi\\\", \\\"bn\\\", \\\"bo\\\", \\\"br\\\", \\\"ca\\\", \\\"co\\\", \\\"cs\\\", \\\"cy\\\", \\\"da\\\", \\\"de\\\", \\\"dz\\\", \\\"el\\\", \\\"en\\\", \\\"eo\\\", \\\"es\\\", \\\"et\\\", \\\"eu\\\", \\\"fa\\\", \\\"fi\\\", \\\"fj\\\", \\\"fo\\\", \\\"fr\\\", \\\"fy\\\", \\\"ga\\\", \\\"gd\\\", \\\"gl\\\", \\\"gn\\\", \\\"gu\\\", \\\"ha\\\", \\\"hi\\\", \\\"hr\\\", \\\"hu\\\", \\\"hy\\\", \\\"ia\\\", \\\"ie\\\", \\\"ik\\\", \\\"in\\\", \\\"is\\\", \\\"it\\\", \\\"iw\\\", \\\"ja\\\", \\\"ji\\\", \\\"jw\\\", \\\"ka\\\", \\\"kk\\\", \\\"kl\\\", \\\"km\\\", \\\"kn\\\", \\\"ko\\\", \\\"ks\\\", \\\"ku\\\", \\\"ky\\\", \\\"la\\\", \\\"ln\\\", \\\"lo\\\", \\\"lt\\\", \\\"lv\\\", \\\"mg\\\", \\\"mi\\\", \\\"mk\\\", \\\"ml\\\", \\\"mn\\\", \\\"mo\\\", \\\"mr\\\", \\\"ms\\\", \\\"mt\\\", \\\"my\\\", \\\"na\\\", \\\"ne\\\", \\\"nl\\\", \\\"no\\\", \\\"oc\\\", \\\"om\\\", \\\"or\\\", \\\"pa\\\", \\\"pl\\\", \\\"ps\\\", \\\"pt\\\", \\\"qu\\\", \\\"rm\\\", \\\"rn\\\", \\\"ro\\\", \\\"ru\\\", \\\"rw\\\", \\\"sa\\\", \\\"sd\\\", \\\"sg\\\", \\\"sh\\\", \\\"si\\\", \\\"sk\\\", \\\"sl\\\", \\\"sm\\\", \\\"sn\\\", \\\"so\\\", \\\"sq\\\", \\\"sr\\\", \\\"ss\\\", \\\"st\\\", \\\"su\\\", \\\"sv\\\", \\\"sw\\\", \\\"ta\\\", \\\"te\\\", \\\"tg\\\", \\\"th\\\", \\\"ti\\\", \\\"tk\\\", \\\"tl\\\", \\\"tn\\\", \\\"to\\\", \\\"tr\\\", \\\"ts\\\", \\\"tt\\\", \\\"tw\\\", \\\"uk\\\", \\\"ur\\\", \\\"uz\\\", \\\"vi\\\", \\\"vo\\\", \\\"wo\\\", \\\"xh\\\", \\\"yo\\\", \\\"zh\\\", \\\"zu\\\"]\\\\n    },\\\\n    \\\"xml:space\\\": {\\\\n        \\\"attribOptions\\\": [\\\"default\\\", \\\"preserve\\\"]\\\\n    },\\\\n    \\\"yChannelSelector\\\": {\\\\n        \\\"attribOptions\\\": [\\\"R\\\", \\\"G\\\", \\\"B\\\", \\\"A\\\"]\\\\n    },\\\\n    \\\"zoomAndPan\\\": {\\\\n        \\\"attribOptions\\\": [\\\"disable\\\", \\\"magnify\\\"]\\\\n    }\\\\n}\\\\n\\';});\\n\\n//# sourceURL=/text!SVGAttributes.json\");\n\n","eval(\"/*\\n * Copyright (c) 2015 Adobe Systems Incorporated. All rights reserved.\\n *  \\n * Permission is hereby granted, free of charge, to any person obtaining a\\n * copy of this software and associated documentation files (the \\\"Software\\\"), \\n * to deal in the Software without restriction, including without limitation \\n * the rights to use, copy, modify, merge, publish, distribute, sublicense, \\n * and/or sell copies of the Software, and to permit persons to whom the \\n * Software is furnished to do so, subject to the following conditions:\\n *  \\n * The above copyright notice and this permission notice shall be included in\\n * all copies or substantial portions of the Software.\\n *  \\n * THE SOFTWARE IS PROVIDED \\\"AS IS\\\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, \\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER \\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING \\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER \\n * DEALINGS IN THE SOFTWARE.\\n * \\n */\\n\\n/*jslint vars: true, plusplus: true, devel: true, nomen: true, indent: 4, maxerr: 50 */\\n/*global define, brackets, $ */\\n\\ndefine(\\'main\\',[\\'require\\',\\'exports\\',\\'module\\',\\'text!SVGTags.json\\',\\'text!SVGAttributes.json\\'],function (require, exports, module) {\\n    \\\"use strict\\\";\\n    \\n    // Load dependencies.\\n    var AppInit             = brackets.getModule(\\\"utils/AppInit\\\"),\\n        CodeHintManager     = brackets.getModule(\\\"editor/CodeHintManager\\\"),\\n        PreferencesManager  = brackets.getModule(\\\"preferences/PreferencesManager\\\"),\\n        XMLUtils            = brackets.getModule(\\\"language/XMLUtils\\\"),\\n        StringMatch         = brackets.getModule(\\\"utils/StringMatch\\\"),\\n        ExtensionUtils      = brackets.getModule(\\\"utils/ExtensionUtils\\\"),\\n        ColorUtils          = brackets.getModule(\\\"utils/ColorUtils\\\"),\\n        _                   = brackets.getModule(\\\"thirdparty/lodash\\\"),\\n        SVGTags             = require(\\\"text!SVGTags.json\\\"),\\n        SVGAttributes       = require(\\\"text!SVGAttributes.json\\\"),\\n        cachedAttributes    = {},\\n        tagData,\\n        attributeData,\\n        isSVGEnabled;\\n\\n    var stringMatcherOptions = {\\n        preferPrefixMatches: true\\n    };\\n\\n    // Define our own pref for hinting.\\n    PreferencesManager.definePreference(\\\"codehint.SVGHints\\\", \\\"boolean\\\", true);\\n    \\n    // Preferences to control hint.\\n    function _isSVGHintsEnabled() {\\n        return (PreferencesManager.get(\\\"codehint.SVGHints\\\") !== false &&\\n                PreferencesManager.get(\\\"showCodeHints\\\") !== false);\\n    }\\n    \\n    PreferencesManager.on(\\\"change\\\", \\\"codehint.SVGHints\\\", function () {\\n        isSVGEnabled = _isSVGHintsEnabled();\\n    });\\n\\n    PreferencesManager.on(\\\"change\\\", \\\"showCodeHints\\\", function () {\\n        isSVGEnabled = _isSVGHintsEnabled();\\n    });\\n\\n    // Check if SVG Hints are available.\\n    isSVGEnabled = _isSVGHintsEnabled();\\n\\n    /**\\n     * Returns a list of attributes used by a tag.\\n     * \\n     * @param {string} tagName name of the SVG tag.\\n     * @return {Array.<string>} list of attributes.\\n     */\\n    function getTagAttributes(tagName) {\\n        var tag;\\n        \\n        if (!cachedAttributes.hasOwnProperty(tagName)) {\\n            tag = tagData.tags[tagName];\\n            cachedAttributes[tagName] = [];\\n            if (tag.attributes) {\\n                cachedAttributes[tagName] =  cachedAttributes[tagName].concat(tag.attributes);\\n            }\\n            tag.attributeGroups.forEach(function (group) {\\n                if (tagData.attributeGroups.hasOwnProperty(group)) {\\n                    cachedAttributes[tagName] = cachedAttributes[tagName].concat(tagData.attributeGroups[group]);\\n                }\\n            });\\n            cachedAttributes[tagName] = _.uniq(cachedAttributes[tagName].sort(), true);\\n        }\\n        return cachedAttributes[tagName];\\n    }\\n\\n    /*\\n     * Returns a sorted and formatted list of hints with the query substring\\n     * highlighted.\\n     * \\n     * @param {Array.<Object>} hints - the list of hints to format\\n     * @param {string} query - querystring used for highlighting matched\\n     *      portions of each hint\\n     * @return {Array.jQuery} sorted Array of jQuery DOM elements to insert\\n     */\\n    function formatHints(hints, query) {\\n        var hasColorSwatch = hints.some(function (token) {\\n            return token.color;\\n        });\\n\\n        StringMatch.basicMatchSort(hints);\\n        return hints.map(function (token) {\\n            var $hintObj = $(\\\"<span>\\\").addClass(\\\"brackets-svg-hints\\\");\\n\\n            // highlight the matched portion of each hint\\n            if (token.stringRanges) {\\n                token.stringRanges.forEach(function (item) {\\n                    if (item.matched) {\\n                        $hintObj.append($(\\\"<span>\\\")\\n                            .text(item.text)\\n                            .addClass(\\\"matched-hint\\\"));\\n                    } else {\\n                        $hintObj.append(item.text);\\n                    }\\n                });\\n            } else {\\n                $hintObj.text(token.value);\\n            }\\n\\n            if (hasColorSwatch) {\\n                $hintObj = ColorUtils.formatColorHint($hintObj, token.color);\\n            }\\n\\n            return $hintObj;\\n        });\\n    }\\n\\n    /**\\n     * @constructor\\n     */\\n    function SVGCodeHints() {\\n        this.tagInfo = null;\\n    }\\n    \\n    /**\\n     * Determines whether SVG code hints are available in the current editor.\\n     * \\n     * @param {!Editor} editor An instance of Editor\\n     * @param {string} implicitChar A single character that was inserted by the\\n     * user or null if the request was explicity made to start hinting session.\\n     * \\n     * @return {boolean} Determines whether or not hints are available in the current context.\\n     */\\n    SVGCodeHints.prototype.hasHints = function (editor, implicitChar) {\\n        if (isSVGEnabled && editor.getModeForSelection() === \\\"image/svg+xml\\\") {\\n            this.editor = editor;\\n            this.tagInfo = XMLUtils.getTagInfo(this.editor, this.editor.getCursorPos());\\n            \\n            if (this.tagInfo && this.tagInfo.tokenType) {\\n                return true;\\n            }\\n        }\\n        return false;\\n    };\\n    \\n    /**\\n     * Returns a list of hints that are available in the current context,\\n     * or null if there are no hints available. \\n     *\\n     * @param {string} implicitChar A character that the user typed in the hinting session.\\n     * @return {!{hints: Array.<jQueryObject>, match: string, selectInitial: boolean, handleWideResults: boolean}}\\n     */\\n    SVGCodeHints.prototype.getHints = function (implicitChar) {\\n        var hints = [], query, tagInfo, attributes = [], options = [], index, isMultiple, tagSpecificOptions;\\n        \\n        tagInfo  = XMLUtils.getTagInfo(this.editor, this.editor.getCursorPos());\\n        this.tagInfo = tagInfo;\\n        \\n        if (tagInfo && tagInfo.tokenType) {\\n            query = tagInfo.token.string.substr(0, tagInfo.offset).trim();\\n        \\n            if (tagInfo.tokenType === XMLUtils.TOKEN_TAG) {\\n                hints = $.map(Object.keys(tagData.tags), function (tag) {\\n                    var match = StringMatch.stringMatch(tag, query, stringMatcherOptions);\\n                    if (match) {\\n                        return match;\\n                    }\\n                });\\n            } else if (tagInfo.tokenType === XMLUtils.TOKEN_ATTR) {\\n                if (!tagData.tags[tagInfo.tagName]) {\\n                    return null;\\n                }\\n                // Get attributes.\\n                attributes = getTagAttributes(tagInfo.tagName);\\n                hints = $.map(attributes, function (attribute) {\\n                    if (tagInfo.exclusionList.indexOf(attribute) === -1) {\\n                        var match = StringMatch.stringMatch(attribute, query, stringMatcherOptions);\\n                        if (match) {\\n                            return match;\\n                        }\\n                    }\\n                });\\n            } else if (tagInfo.tokenType === XMLUtils.TOKEN_VALUE) {\\n                index = tagInfo.tagName + \\\"/\\\" + tagInfo.attrName;\\n                tagSpecificOptions = attributeData[index];\\n                \\n                if (!tagData.tags[tagInfo.tagName] && !(attributeData[tagInfo.attrName] || tagSpecificOptions)) {\\n                    return null;\\n                }\\n                \\n                // Get attribute options.\\n                // Prefer tag/attribute for specific tags, else use general options for attributes.\\n                if (tagSpecificOptions) {\\n                    options = tagSpecificOptions.attribOptions;\\n                    isMultiple = tagSpecificOptions.multiple;\\n                } else if (attributeData[tagInfo.attrName]) {\\n                    options = attributeData[tagInfo.attrName].attribOptions;\\n                    isMultiple = attributeData[tagInfo.attrName].multiple;\\n\\n                    if (attributeData[tagInfo.attrName].type === \\\"color\\\") {\\n                        options = ColorUtils.COLOR_NAMES.map(function (color) {\\n                            return { text: color, color: color };\\n                        });\\n                        options = options.concat([\\\"currentColor\\\", \\\"transparent\\\"]);\\n                    }\\n                }\\n                \\n                // Stop if the attribute doesn\\'t support multiple options.\\n                if (!isMultiple && /\\\\s+/.test(tagInfo.token.string)) {\\n                    return null;\\n                }\\n                \\n                query = XMLUtils.getValueQuery(tagInfo);\\n                hints = $.map(options, function (option) {\\n                    if (tagInfo.exclusionList.indexOf(option) === -1) {\\n                        var match = StringMatch.stringMatch(option.text || option, query, stringMatcherOptions);\\n                        if (match) {\\n                            if (option.color) {\\n                                match.color = option.color;\\n                            }\\n\\n                            return match;\\n                        }\\n                    }\\n                });\\n            }\\n            return {\\n                hints: formatHints(hints, query),\\n                match: null,\\n                selectInitial: true,\\n                handleWideResults: false\\n            };\\n        }\\n        return null;\\n    };\\n    \\n    /**\\n     * Insert the selected hint into the editor\\n     *\\n     * @param {string} completion The string that user selected from the list\\n     * @return {boolean} Determines whether or not to continue the hinting session\\n     */\\n    SVGCodeHints.prototype.insertHint = function (completion) {\\n        var tagInfo = this.tagInfo,\\n            pos     = this.editor.getCursorPos(),\\n            start   = {line: -1, ch: -1},\\n            end     = {line: -1, ch: -1},\\n            query,\\n            startChar,\\n            endChar,\\n            quoteChar;\\n        \\n        if (completion.jquery) {\\n            completion = completion.text();\\n        }\\n        start.line = end.line = pos.line;\\n        \\n        if (tagInfo.tokenType === XMLUtils.TOKEN_TAG) {\\n            start.ch = pos.ch - tagInfo.offset;\\n            end.ch = tagInfo.token.end;\\n            this.editor.document.replaceRange(completion, start, end);\\n            return false;\\n        } else if (tagInfo.tokenType === XMLUtils.TOKEN_ATTR) {\\n            if (!tagInfo.shouldReplace) {\\n                completion += \\\"=\\\\\\\"\\\\\\\"\\\";\\n                \\n                // In case the current token is whitespace, start and end will be same.\\n                if (XMLUtils.regexWhitespace.test(tagInfo.token.string)) {\\n                    start.ch = end.ch = pos.ch;\\n                } else {\\n                    start.ch = pos.ch - tagInfo.offset;\\n                    end.ch = pos.ch;\\n                }\\n                this.editor.document.replaceRange(completion, start, end);\\n                this.editor.setCursorPos(start.line, start.ch + completion.length - 1);\\n                return true;\\n            } else {\\n                // We don\\'t append =\\\"\\\" again, just replace the attribute token.\\n                start.ch = tagInfo.token.start;\\n                end.ch = tagInfo.token.end;\\n                this.editor.document.replaceRange(completion, start, end);\\n                this.editor.setCursorPos(start.line, start.ch + completion.length);\\n                return false;\\n            }\\n        } else if (tagInfo.tokenType === XMLUtils.TOKEN_VALUE) {\\n            startChar = tagInfo.token.string.charAt(0);\\n            endChar = tagInfo.token.string.substr(-1, 1);\\n            \\n            // Get the quote character.\\n            if (/^[\\'\\\"]$/.test(startChar)) {\\n                quoteChar = startChar;\\n            } else {\\n                quoteChar = \\\"\\\\\\\"\\\";\\n            }\\n\\n            // Append quotes to attribute value if not already.\\n            if (!/^[\\'\\\"]$/.test(startChar)) {\\n                completion = quoteChar + completion;\\n            }\\n            if (!/^[\\'\\\"]$/.test(endChar) || tagInfo.token.string.length === 1) {\\n                completion = completion + quoteChar;\\n            }\\n\\n            query = XMLUtils.getValueQuery(tagInfo);\\n            start.ch = pos.ch - query.length;\\n            end.ch = pos.ch;\\n            this.editor.document.replaceRange(completion, start, end);\\n            \\n            // Place cursor outside the quote if the next char is quote.\\n            if (/^[\\'\\\"]$/.test(tagInfo.token.string.substr(tagInfo.offset, 1))) {\\n                this.editor.setCursorPos(pos.line, start.ch + completion.length + 1);\\n            }\\n            return false;\\n        }\\n    };\\n    \\n    AppInit.appReady(function () {\\n        tagData = JSON.parse(SVGTags);\\n        attributeData = JSON.parse(SVGAttributes);\\n        \\n        var hintProvider = new SVGCodeHints();\\n        CodeHintManager.registerHintProvider(hintProvider, [\\\"svg\\\"], 0);\\n        \\n        ExtensionUtils.loadStyleSheet(module, \\\"styles/brackets-svg-hints.css\\\");\\n        exports.hintProvider = hintProvider;\\n    });\\n});\\n\\n//# sourceURL=/main.js\");\n\n"]}